2020.12.20 11:39:52.184 CST   >> INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker 330 postProcessAfterInitialization - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020.12.20 11:39:53.456 CST   >> INFO  org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration 102 initialize - Located property source: CompositePropertySource {name='consul', propertySources=[ConsulPropertySource@31397852 {name='backoffice-service/', properties=com.ecwid.consul.v1.ConsulClient@6d4780}, ConsulPropertySource@17491852 {name='application/', properties=com.ecwid.consul.v1.ConsulClient@6d4780}]}
2020.12.20 11:39:53.513 CST   >> INFO  org.springframework.boot.SpringApplication 651 logStartupProfileInfo - No active profile set, falling back to default profiles: default
2020.12.20 11:39:54.551 CST   >> WARN  org.springframework.boot.actuate.endpoint.EndpointId 155 logWarning - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020.12.20 11:39:54.760 CST   >> INFO  org.springframework.cloud.context.scope.GenericScope 295 setSerializationId - BeanFactory id=c975b231-3742-3dd2-9a77-e2d4aebfddc3
2020.12.20 11:39:54.934 CST   >> INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker 330 postProcessAfterInitialization - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020.12.20 11:39:55.360 CST   >> INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer 92 initialize - Tomcat initialized with port(s): 7001 (http)
2020.12.20 11:39:55.383 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing ProtocolHandler ["http-nio-7001"]
2020.12.20 11:39:55.384 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting service [Tomcat]
2020.12.20 11:39:55.384 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting Servlet engine: [Apache Tomcat/9.0.29]
2020.12.20 11:39:55.577 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing Spring embedded WebApplicationContext
2020.12.20 11:39:55.578 CST   >> INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext 284 prepareWebApplicationContext - Root WebApplicationContext: initialization completed in 2043 ms
2020.12.20 11:39:55.709 CST   >> WARN  com.netflix.config.sources.URLConfigurationSource 121 <init> - No URLs will be polled as dynamic configuration sources.
2020.12.20 11:39:55.710 CST   >> INFO  com.netflix.config.sources.URLConfigurationSource 122 <init> - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020.12.20 11:39:55.725 CST   >> INFO  com.netflix.config.DynamicPropertyFactory 281 getInstance - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@13cef95
2020.12.20 11:39:56.635 CST   >> WARN  com.netflix.config.sources.URLConfigurationSource 121 <init> - No URLs will be polled as dynamic configuration sources.
2020.12.20 11:39:56.636 CST   >> INFO  com.netflix.config.sources.URLConfigurationSource 122 <init> - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020.12.20 11:39:56.860 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 171 initialize - Initializing ExecutorService 'applicationTaskExecutor'
2020.12.20 11:39:58.301 CST   >> WARN  org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger 106 logWarning - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020.12.20 11:39:58.345 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 171 initialize - Initializing ExecutorService 'catalogWatchTaskScheduler'
2020.12.20 11:39:58.359 CST   >> WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger 81 logWarning - Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020.12.20 11:39:58.388 CST   >> INFO  org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver 58 <init> - Exposing 2 endpoint(s) beneath base path '/actuator'
2020.12.20 11:39:58.594 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting ProtocolHandler ["http-nio-7001"]
2020.12.20 11:39:58.650 CST   >> INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer 204 start - Tomcat started on port(s): 7001 (http) with context path ''
2020.12.20 11:39:58.671 CST   >> INFO  org.springframework.cloud.consul.serviceregistry.ConsulServiceRegistry 65 register - Registering service with consul: NewService{id='backoffice-service-192-168-2-102-7001', name='backoffice-service', tags=[urlprefix-/backoffice-service, secure=false], address='192.168.2.102', meta=null, port=7001, enableTagOverride=null, check=Check{script='null', interval='1s', ttl='null', http='http://192.168.2.102:7001/health', method='null', header={}, tcp='null', timeout='null', deregisterCriticalServiceAfter='null', tlsSkipVerify=null, status='null'}, checks=null}
2020.12.20 11:39:59.164 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020.12.20 11:39:59.164 CST   >> INFO  org.springframework.web.servlet.FrameworkServlet 525 initServletBean - Initializing Servlet 'dispatcherServlet'
2020.12.20 11:39:59.171 CST   >> INFO  org.springframework.web.servlet.FrameworkServlet 547 initServletBean - Completed initialization in 6 ms
2020.12.20 11:39:59.265 CST   >> INFO  org.springframework.boot.StartupInfoLogger 61 logStarted - Started BackofficeRunner in 8.641 seconds (JVM running for 10.857)
2020.12.20 11:40:35.471 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 208 shutdown - Shutting down ExecutorService 'catalogWatchTaskScheduler'
2020.12.20 11:40:35.471 CST   >> INFO  org.springframework.cloud.consul.serviceregistry.ConsulServiceRegistry 93 deregister - Deregistering service with consul: backoffice-service-192-168-2-102-7001
2020.12.20 11:40:35.484 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 208 shutdown - Shutting down ExecutorService 'applicationTaskExecutor'
2020.12.20 11:40:50.914 CST   >> INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker 330 postProcessAfterInitialization - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020.12.20 11:40:52.111 CST   >> INFO  org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration 102 initialize - Located property source: CompositePropertySource {name='consul', propertySources=[ConsulPropertySource {name='backoffice-service/'}, ConsulPropertySource {name='application/'}]}
2020.12.20 11:40:52.156 CST   >> INFO  org.springframework.boot.SpringApplication 651 logStartupProfileInfo - No active profile set, falling back to default profiles: default
2020.12.20 11:40:53.153 CST   >> WARN  org.springframework.boot.actuate.endpoint.EndpointId 155 logWarning - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020.12.20 11:40:53.323 CST   >> INFO  org.springframework.cloud.context.scope.GenericScope 295 setSerializationId - BeanFactory id=c975b231-3742-3dd2-9a77-e2d4aebfddc3
2020.12.20 11:40:53.487 CST   >> INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker 330 postProcessAfterInitialization - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020.12.20 11:40:53.855 CST   >> INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer 92 initialize - Tomcat initialized with port(s): 7001 (http)
2020.12.20 11:40:53.880 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing ProtocolHandler ["http-nio-7001"]
2020.12.20 11:40:53.881 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting service [Tomcat]
2020.12.20 11:40:53.881 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting Servlet engine: [Apache Tomcat/9.0.29]
2020.12.20 11:40:54.110 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing Spring embedded WebApplicationContext
2020.12.20 11:40:54.111 CST   >> INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext 284 prepareWebApplicationContext - Root WebApplicationContext: initialization completed in 1934 ms
2020.12.20 11:40:54.276 CST   >> WARN  com.netflix.config.sources.URLConfigurationSource 121 <init> - No URLs will be polled as dynamic configuration sources.
2020.12.20 11:40:54.277 CST   >> INFO  com.netflix.config.sources.URLConfigurationSource 122 <init> - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020.12.20 11:40:54.295 CST   >> INFO  com.netflix.config.DynamicPropertyFactory 281 getInstance - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@159da34
2020.12.20 11:40:55.157 CST   >> WARN  com.netflix.config.sources.URLConfigurationSource 121 <init> - No URLs will be polled as dynamic configuration sources.
2020.12.20 11:40:55.157 CST   >> INFO  com.netflix.config.sources.URLConfigurationSource 122 <init> - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020.12.20 11:40:55.305 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 171 initialize - Initializing ExecutorService 'applicationTaskExecutor'
2020.12.20 11:40:56.504 CST   >> WARN  org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger 106 logWarning - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020.12.20 11:40:56.530 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 171 initialize - Initializing ExecutorService 'catalogWatchTaskScheduler'
2020.12.20 11:40:56.544 CST   >> WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger 81 logWarning - Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020.12.20 11:40:56.589 CST   >> INFO  org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver 58 <init> - Exposing 2 endpoint(s) beneath base path '/actuator'
2020.12.20 11:40:56.720 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting ProtocolHandler ["http-nio-7001"]
2020.12.20 11:40:56.752 CST   >> INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer 204 start - Tomcat started on port(s): 7001 (http) with context path ''
2020.12.20 11:40:56.773 CST   >> INFO  org.springframework.cloud.consul.serviceregistry.ConsulServiceRegistry 65 register - Registering service with consul: NewService{id='backoffice-service-192-168-2-102-7001', name='backoffice-service', tags=[urlprefix-/backoffice-service, secure=false], address='192.168.2.102', meta=null, port=7001, enableTagOverride=null, check=Check{script='null', interval='1s', ttl='null', http='http://192.168.2.102:7001/health', method='null', header={}, tcp='null', timeout='null', deregisterCriticalServiceAfter='null', tlsSkipVerify=null, status='null'}, checks=null}
2020.12.20 11:40:57.122 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020.12.20 11:40:57.122 CST   >> INFO  org.springframework.web.servlet.FrameworkServlet 525 initServletBean - Initializing Servlet 'dispatcherServlet'
2020.12.20 11:40:57.129 CST   >> INFO  org.springframework.web.servlet.FrameworkServlet 547 initServletBean - Completed initialization in 7 ms
2020.12.20 11:40:57.333 CST   >> INFO  org.springframework.boot.StartupInfoLogger 61 logStarted - Started BackofficeRunner in 7.95 seconds (JVM running for 9.92)
2020.12.20 11:40:59.346 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 208 shutdown - Shutting down ExecutorService 'catalogWatchTaskScheduler'
2020.12.20 11:40:59.346 CST   >> INFO  org.springframework.cloud.consul.serviceregistry.ConsulServiceRegistry 93 deregister - Deregistering service with consul: backoffice-service-192-168-2-102-7001
2020.12.20 11:40:59.353 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 208 shutdown - Shutting down ExecutorService 'applicationTaskExecutor'
2020.12.20 11:42:01.613 CST   >> INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker 330 postProcessAfterInitialization - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020.12.20 11:42:02.737 CST   >> INFO  org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration 102 initialize - Located property source: CompositePropertySource {name='consul', propertySources=[ConsulPropertySource {name='backoffice-service/'}, ConsulPropertySource {name='application/'}]}
2020.12.20 11:42:02.778 CST   >> INFO  org.springframework.boot.SpringApplication 651 logStartupProfileInfo - No active profile set, falling back to default profiles: default
2020.12.20 11:42:03.599 CST   >> WARN  org.springframework.boot.actuate.endpoint.EndpointId 155 logWarning - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020.12.20 11:42:03.758 CST   >> INFO  org.springframework.cloud.context.scope.GenericScope 295 setSerializationId - BeanFactory id=c975b231-3742-3dd2-9a77-e2d4aebfddc3
2020.12.20 11:42:03.889 CST   >> INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker 330 postProcessAfterInitialization - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020.12.20 11:42:04.209 CST   >> INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer 92 initialize - Tomcat initialized with port(s): 7001 (http)
2020.12.20 11:42:04.228 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing ProtocolHandler ["http-nio-7001"]
2020.12.20 11:42:04.229 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting service [Tomcat]
2020.12.20 11:42:04.230 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting Servlet engine: [Apache Tomcat/9.0.29]
2020.12.20 11:42:04.389 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing Spring embedded WebApplicationContext
2020.12.20 11:42:04.389 CST   >> INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext 284 prepareWebApplicationContext - Root WebApplicationContext: initialization completed in 1598 ms
2020.12.20 11:42:04.530 CST   >> WARN  com.netflix.config.sources.URLConfigurationSource 121 <init> - No URLs will be polled as dynamic configuration sources.
2020.12.20 11:42:04.531 CST   >> INFO  com.netflix.config.sources.URLConfigurationSource 122 <init> - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020.12.20 11:42:04.551 CST   >> INFO  com.netflix.config.DynamicPropertyFactory 281 getInstance - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@1c7fb0b
2020.12.20 11:42:05.328 CST   >> WARN  com.netflix.config.sources.URLConfigurationSource 121 <init> - No URLs will be polled as dynamic configuration sources.
2020.12.20 11:42:05.328 CST   >> INFO  com.netflix.config.sources.URLConfigurationSource 122 <init> - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020.12.20 11:42:05.477 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 171 initialize - Initializing ExecutorService 'applicationTaskExecutor'
2020.12.20 11:42:06.698 CST   >> WARN  org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger 106 logWarning - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020.12.20 11:42:06.722 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 171 initialize - Initializing ExecutorService 'catalogWatchTaskScheduler'
2020.12.20 11:42:06.734 CST   >> WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger 81 logWarning - Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020.12.20 11:42:06.773 CST   >> INFO  org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver 58 <init> - Exposing 2 endpoint(s) beneath base path '/actuator'
2020.12.20 11:42:06.906 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting ProtocolHandler ["http-nio-7001"]
2020.12.20 11:42:06.943 CST   >> INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer 204 start - Tomcat started on port(s): 7001 (http) with context path ''
2020.12.20 11:42:06.968 CST   >> INFO  org.springframework.cloud.consul.serviceregistry.ConsulServiceRegistry 65 register - Registering service with consul: NewService{id='backoffice-service-192-168-2-102-7001', name='backoffice-service', tags=[urlprefix-/backoffice-service, secure=false], address='192.168.2.102', meta=null, port=7001, enableTagOverride=null, check=Check{script='null', interval='1s', ttl='null', http='http://192.168.2.102:7001/health', method='null', header={}, tcp='null', timeout='null', deregisterCriticalServiceAfter='null', tlsSkipVerify=null, status='null'}, checks=null}
2020.12.20 11:42:07.469 CST   >> INFO  org.springframework.boot.StartupInfoLogger 61 logStarted - Started BackofficeRunner in 7.358 seconds (JVM running for 9.387)
2020.12.20 11:42:07.938 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020.12.20 11:42:07.938 CST   >> INFO  org.springframework.web.servlet.FrameworkServlet 525 initServletBean - Initializing Servlet 'dispatcherServlet'
2020.12.20 11:42:07.944 CST   >> INFO  org.springframework.web.servlet.FrameworkServlet 547 initServletBean - Completed initialization in 6 ms
2020.12.20 11:42:11.544 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 208 shutdown - Shutting down ExecutorService 'catalogWatchTaskScheduler'
2020.12.20 11:42:11.545 CST   >> INFO  org.springframework.cloud.consul.serviceregistry.ConsulServiceRegistry 93 deregister - Deregistering service with consul: backoffice-service-192-168-2-102-7001
2020.12.20 11:42:11.551 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 208 shutdown - Shutting down ExecutorService 'applicationTaskExecutor'
2020.12.20 11:43:18.163 CST   >> INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker 330 postProcessAfterInitialization - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020.12.20 11:43:19.216 CST   >> INFO  org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration 102 initialize - Located property source: CompositePropertySource {name='consul', propertySources=[ConsulPropertySource {name='backoffice-service/'}, ConsulPropertySource {name='application/'}]}
2020.12.20 11:43:19.251 CST   >> INFO  org.springframework.boot.SpringApplication 651 logStartupProfileInfo - No active profile set, falling back to default profiles: default
2020.12.20 11:43:20.071 CST   >> WARN  org.springframework.boot.actuate.endpoint.EndpointId 155 logWarning - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020.12.20 11:43:20.235 CST   >> INFO  org.springframework.cloud.context.scope.GenericScope 295 setSerializationId - BeanFactory id=c975b231-3742-3dd2-9a77-e2d4aebfddc3
2020.12.20 11:43:20.365 CST   >> INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker 330 postProcessAfterInitialization - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020.12.20 11:43:20.700 CST   >> INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer 92 initialize - Tomcat initialized with port(s): 7001 (http)
2020.12.20 11:43:20.720 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing ProtocolHandler ["http-nio-7001"]
2020.12.20 11:43:20.721 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting service [Tomcat]
2020.12.20 11:43:20.722 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting Servlet engine: [Apache Tomcat/9.0.29]
2020.12.20 11:43:20.883 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing Spring embedded WebApplicationContext
2020.12.20 11:43:20.883 CST   >> INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext 284 prepareWebApplicationContext - Root WebApplicationContext: initialization completed in 1618 ms
2020.12.20 11:43:20.993 CST   >> WARN  com.netflix.config.sources.URLConfigurationSource 121 <init> - No URLs will be polled as dynamic configuration sources.
2020.12.20 11:43:20.994 CST   >> INFO  com.netflix.config.sources.URLConfigurationSource 122 <init> - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020.12.20 11:43:21.014 CST   >> INFO  com.netflix.config.DynamicPropertyFactory 281 getInstance - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@1148dc2
2020.12.20 11:43:21.776 CST   >> WARN  com.netflix.config.sources.URLConfigurationSource 121 <init> - No URLs will be polled as dynamic configuration sources.
2020.12.20 11:43:21.776 CST   >> INFO  com.netflix.config.sources.URLConfigurationSource 122 <init> - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020.12.20 11:43:21.926 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 171 initialize - Initializing ExecutorService 'applicationTaskExecutor'
2020.12.20 11:43:23.173 CST   >> WARN  org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger 106 logWarning - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020.12.20 11:43:23.200 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 171 initialize - Initializing ExecutorService 'catalogWatchTaskScheduler'
2020.12.20 11:43:23.213 CST   >> WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger 81 logWarning - Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020.12.20 11:43:23.255 CST   >> INFO  org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver 58 <init> - Exposing 2 endpoint(s) beneath base path '/actuator'
2020.12.20 11:43:23.393 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting ProtocolHandler ["http-nio-7001"]
2020.12.20 11:43:23.421 CST   >> INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer 204 start - Tomcat started on port(s): 7001 (http) with context path ''
2020.12.20 11:43:23.439 CST   >> INFO  org.springframework.cloud.consul.serviceregistry.ConsulServiceRegistry 65 register - Registering service with consul: NewService{id='backoffice-service-192-168-2-102-7001', name='backoffice-service', tags=[urlprefix-/backoffice-service, secure=false], address='192.168.2.102', meta=null, port=7001, enableTagOverride=null, check=Check{script='null', interval='1s', ttl='null', http='http://192.168.2.102:7001/health', method='null', header={}, tcp='null', timeout='null', deregisterCriticalServiceAfter='null', tlsSkipVerify=null, status='null'}, checks=null}
2020.12.20 11:43:23.929 CST   >> INFO  org.springframework.boot.StartupInfoLogger 61 logStarted - Started BackofficeRunner in 7.261 seconds (JVM running for 9.219)
2020.12.20 11:43:24.190 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020.12.20 11:43:24.190 CST   >> INFO  org.springframework.web.servlet.FrameworkServlet 525 initServletBean - Initializing Servlet 'dispatcherServlet'
2020.12.20 11:43:24.198 CST   >> INFO  org.springframework.web.servlet.FrameworkServlet 547 initServletBean - Completed initialization in 8 ms
2020.12.20 11:43:54.201 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 208 shutdown - Shutting down ExecutorService 'catalogWatchTaskScheduler'
2020.12.20 11:43:54.201 CST   >> INFO  org.springframework.cloud.consul.serviceregistry.ConsulServiceRegistry 93 deregister - Deregistering service with consul: backoffice-service-192-168-2-102-7001
2020.12.20 11:43:54.208 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 208 shutdown - Shutting down ExecutorService 'applicationTaskExecutor'
2020.12.20 11:44:01.138 CST   >> INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker 330 postProcessAfterInitialization - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020.12.20 11:44:02.238 CST   >> INFO  org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration 102 initialize - Located property source: CompositePropertySource {name='consul', propertySources=[ConsulPropertySource {name='backoffice-service/'}, ConsulPropertySource {name='application/'}]}
2020.12.20 11:44:02.274 CST   >> INFO  org.springframework.boot.SpringApplication 651 logStartupProfileInfo - No active profile set, falling back to default profiles: default
2020.12.20 11:44:03.115 CST   >> WARN  org.springframework.boot.actuate.endpoint.EndpointId 155 logWarning - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020.12.20 11:44:03.304 CST   >> INFO  org.springframework.cloud.context.scope.GenericScope 295 setSerializationId - BeanFactory id=c975b231-3742-3dd2-9a77-e2d4aebfddc3
2020.12.20 11:44:03.453 CST   >> INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker 330 postProcessAfterInitialization - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020.12.20 11:44:03.790 CST   >> INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer 92 initialize - Tomcat initialized with port(s): 7001 (http)
2020.12.20 11:44:03.810 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing ProtocolHandler ["http-nio-7001"]
2020.12.20 11:44:03.811 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting service [Tomcat]
2020.12.20 11:44:03.811 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting Servlet engine: [Apache Tomcat/9.0.29]
2020.12.20 11:44:03.967 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing Spring embedded WebApplicationContext
2020.12.20 11:44:03.968 CST   >> INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext 284 prepareWebApplicationContext - Root WebApplicationContext: initialization completed in 1678 ms
2020.12.20 11:44:04.084 CST   >> WARN  com.netflix.config.sources.URLConfigurationSource 121 <init> - No URLs will be polled as dynamic configuration sources.
2020.12.20 11:44:04.085 CST   >> INFO  com.netflix.config.sources.URLConfigurationSource 122 <init> - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020.12.20 11:44:04.106 CST   >> INFO  com.netflix.config.DynamicPropertyFactory 281 getInstance - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@1e8d917
2020.12.20 11:44:04.905 CST   >> WARN  com.netflix.config.sources.URLConfigurationSource 121 <init> - No URLs will be polled as dynamic configuration sources.
2020.12.20 11:44:04.905 CST   >> INFO  com.netflix.config.sources.URLConfigurationSource 122 <init> - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020.12.20 11:44:05.056 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 171 initialize - Initializing ExecutorService 'applicationTaskExecutor'
2020.12.20 11:44:06.267 CST   >> WARN  org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger 106 logWarning - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020.12.20 11:44:06.296 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 171 initialize - Initializing ExecutorService 'catalogWatchTaskScheduler'
2020.12.20 11:44:06.309 CST   >> WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger 81 logWarning - Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020.12.20 11:44:06.352 CST   >> INFO  org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver 58 <init> - Exposing 2 endpoint(s) beneath base path '/actuator'
2020.12.20 11:44:06.492 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting ProtocolHandler ["http-nio-7001"]
2020.12.20 11:44:06.524 CST   >> INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer 204 start - Tomcat started on port(s): 7001 (http) with context path ''
2020.12.20 11:44:06.543 CST   >> INFO  org.springframework.cloud.consul.serviceregistry.ConsulServiceRegistry 65 register - Registering service with consul: NewService{id='backoffice-service-192-168-2-102-7001', name='backoffice-service', tags=[urlprefix-/backoffice-service, secure=false], address='192.168.2.102', meta=null, port=7001, enableTagOverride=null, check=Check{script='null', interval='1s', ttl='null', http='http://192.168.2.102:7001/health', method='null', header={}, tcp='null', timeout='null', deregisterCriticalServiceAfter='null', tlsSkipVerify=null, status='null'}, checks=null}
2020.12.20 11:44:07.030 CST   >> INFO  org.springframework.boot.StartupInfoLogger 61 logStarted - Started BackofficeRunner in 7.431 seconds (JVM running for 9.401)
2020.12.20 11:44:07.225 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020.12.20 11:44:07.225 CST   >> INFO  org.springframework.web.servlet.FrameworkServlet 525 initServletBean - Initializing Servlet 'dispatcherServlet'
2020.12.20 11:44:07.231 CST   >> INFO  org.springframework.web.servlet.FrameworkServlet 547 initServletBean - Completed initialization in 6 ms
2020.12.20 11:44:14.232 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 208 shutdown - Shutting down ExecutorService 'catalogWatchTaskScheduler'
2020.12.20 11:44:14.235 CST   >> INFO  org.springframework.cloud.consul.serviceregistry.ConsulServiceRegistry 93 deregister - Deregistering service with consul: backoffice-service-192-168-2-102-7001
2020.12.20 11:44:14.256 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 208 shutdown - Shutting down ExecutorService 'applicationTaskExecutor'
2020.12.20 11:44:27.661 CST   >> INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker 330 postProcessAfterInitialization - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020.12.20 11:44:28.794 CST   >> INFO  org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration 102 initialize - Located property source: CompositePropertySource {name='consul', propertySources=[ConsulPropertySource {name='backoffice-service/'}, ConsulPropertySource {name='application/'}]}
2020.12.20 11:44:28.831 CST   >> INFO  org.springframework.boot.SpringApplication 651 logStartupProfileInfo - No active profile set, falling back to default profiles: default
2020.12.20 11:44:29.731 CST   >> WARN  org.springframework.boot.actuate.endpoint.EndpointId 155 logWarning - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020.12.20 11:44:29.909 CST   >> INFO  org.springframework.cloud.context.scope.GenericScope 295 setSerializationId - BeanFactory id=c975b231-3742-3dd2-9a77-e2d4aebfddc3
2020.12.20 11:44:30.048 CST   >> INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker 330 postProcessAfterInitialization - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020.12.20 11:44:30.398 CST   >> INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer 92 initialize - Tomcat initialized with port(s): 7001 (http)
2020.12.20 11:44:30.420 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing ProtocolHandler ["http-nio-7001"]
2020.12.20 11:44:30.421 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting service [Tomcat]
2020.12.20 11:44:30.422 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting Servlet engine: [Apache Tomcat/9.0.29]
2020.12.20 11:44:30.589 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing Spring embedded WebApplicationContext
2020.12.20 11:44:30.590 CST   >> INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext 284 prepareWebApplicationContext - Root WebApplicationContext: initialization completed in 1738 ms
2020.12.20 11:44:30.717 CST   >> WARN  com.netflix.config.sources.URLConfigurationSource 121 <init> - No URLs will be polled as dynamic configuration sources.
2020.12.20 11:44:30.718 CST   >> INFO  com.netflix.config.sources.URLConfigurationSource 122 <init> - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020.12.20 11:44:30.736 CST   >> INFO  com.netflix.config.DynamicPropertyFactory 281 getInstance - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@bb303
2020.12.20 11:44:31.522 CST   >> WARN  com.netflix.config.sources.URLConfigurationSource 121 <init> - No URLs will be polled as dynamic configuration sources.
2020.12.20 11:44:31.522 CST   >> INFO  com.netflix.config.sources.URLConfigurationSource 122 <init> - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020.12.20 11:44:31.668 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 171 initialize - Initializing ExecutorService 'applicationTaskExecutor'
2020.12.20 11:44:32.951 CST   >> WARN  org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger 106 logWarning - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020.12.20 11:44:32.975 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 171 initialize - Initializing ExecutorService 'catalogWatchTaskScheduler'
2020.12.20 11:44:32.988 CST   >> WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger 81 logWarning - Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020.12.20 11:44:33.029 CST   >> INFO  org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver 58 <init> - Exposing 2 endpoint(s) beneath base path '/actuator'
2020.12.20 11:44:33.160 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting ProtocolHandler ["http-nio-7001"]
2020.12.20 11:44:33.190 CST   >> INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer 204 start - Tomcat started on port(s): 7001 (http) with context path ''
2020.12.20 11:44:33.208 CST   >> INFO  org.springframework.cloud.consul.serviceregistry.ConsulServiceRegistry 65 register - Registering service with consul: NewService{id='backoffice-service-192-168-2-102-7001', name='backoffice-service', tags=[urlprefix-/backoffice-service, secure=false], address='192.168.2.102', meta=null, port=7001, enableTagOverride=null, check=Check{script='null', interval='1s', ttl='null', http='http://192.168.2.102:7001/health', method='null', header={}, tcp='null', timeout='null', deregisterCriticalServiceAfter='null', tlsSkipVerify=null, status='null'}, checks=null}
2020.12.20 11:44:33.333 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020.12.20 11:44:33.333 CST   >> INFO  org.springframework.web.servlet.FrameworkServlet 525 initServletBean - Initializing Servlet 'dispatcherServlet'
2020.12.20 11:44:33.340 CST   >> INFO  org.springframework.web.servlet.FrameworkServlet 547 initServletBean - Completed initialization in 7 ms
2020.12.20 11:44:33.723 CST   >> INFO  org.springframework.boot.StartupInfoLogger 61 logStarted - Started BackofficeRunner in 7.673 seconds (JVM running for 9.851)
2020.12.20 11:54:09.450 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 208 shutdown - Shutting down ExecutorService 'catalogWatchTaskScheduler'
2020.12.20 11:54:09.451 CST   >> INFO  org.springframework.cloud.consul.serviceregistry.ConsulServiceRegistry 93 deregister - Deregistering service with consul: backoffice-service-192-168-2-102-7001
2020.12.20 11:54:09.459 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 208 shutdown - Shutting down ExecutorService 'applicationTaskExecutor'
2020.12.20 11:54:24.922 CST   >> INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker 330 postProcessAfterInitialization - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020.12.20 11:54:26.057 CST   >> INFO  org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration 102 initialize - Located property source: CompositePropertySource {name='consul', propertySources=[ConsulPropertySource {name='backoffice-service/'}, ConsulPropertySource {name='application/'}]}
2020.12.20 11:54:26.097 CST   >> INFO  org.springframework.boot.SpringApplication 651 logStartupProfileInfo - No active profile set, falling back to default profiles: default
2020.12.20 11:54:26.969 CST   >> WARN  org.springframework.boot.actuate.endpoint.EndpointId 155 logWarning - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020.12.20 11:54:27.195 CST   >> INFO  org.springframework.cloud.context.scope.GenericScope 295 setSerializationId - BeanFactory id=c975b231-3742-3dd2-9a77-e2d4aebfddc3
2020.12.20 11:54:27.393 CST   >> INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker 330 postProcessAfterInitialization - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020.12.20 11:54:27.771 CST   >> INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer 92 initialize - Tomcat initialized with port(s): 7001 (http)
2020.12.20 11:54:27.798 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing ProtocolHandler ["http-nio-7001"]
2020.12.20 11:54:27.799 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting service [Tomcat]
2020.12.20 11:54:27.800 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting Servlet engine: [Apache Tomcat/9.0.29]
2020.12.20 11:54:28.000 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing Spring embedded WebApplicationContext
2020.12.20 11:54:28.001 CST   >> INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext 284 prepareWebApplicationContext - Root WebApplicationContext: initialization completed in 1885 ms
2020.12.20 11:54:28.098 CST   >> WARN  com.netflix.config.sources.URLConfigurationSource 121 <init> - No URLs will be polled as dynamic configuration sources.
2020.12.20 11:54:28.099 CST   >> INFO  com.netflix.config.sources.URLConfigurationSource 122 <init> - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020.12.20 11:54:28.141 CST   >> INFO  com.netflix.config.DynamicPropertyFactory 281 getInstance - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@19c3546
2020.12.20 11:54:29.036 CST   >> WARN  com.netflix.config.sources.URLConfigurationSource 121 <init> - No URLs will be polled as dynamic configuration sources.
2020.12.20 11:54:29.036 CST   >> INFO  com.netflix.config.sources.URLConfigurationSource 122 <init> - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020.12.20 11:54:29.273 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 171 initialize - Initializing ExecutorService 'applicationTaskExecutor'
2020.12.20 11:54:30.612 CST   >> WARN  org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger 106 logWarning - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020.12.20 11:54:30.636 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 171 initialize - Initializing ExecutorService 'catalogWatchTaskScheduler'
2020.12.20 11:54:30.648 CST   >> WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger 81 logWarning - Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020.12.20 11:54:30.672 CST   >> INFO  org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver 58 <init> - Exposing 2 endpoint(s) beneath base path '/actuator'
2020.12.20 11:54:30.813 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting ProtocolHandler ["http-nio-7001"]
2020.12.20 11:54:30.852 CST   >> INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer 204 start - Tomcat started on port(s): 7001 (http) with context path ''
2020.12.20 11:54:30.909 CST   >> INFO  org.springframework.cloud.consul.serviceregistry.ConsulServiceRegistry 65 register - Registering service with consul: NewService{id='backoffice-service-192-168-2-102-7001', name='backoffice-service', tags=[urlprefix-/backoffice-service, secure=false], address='192.168.2.102', meta=null, port=7001, enableTagOverride=null, check=Check{script='null', interval='1s', ttl='null', http='http://192.168.2.102:7001/health', method='null', header={}, tcp='null', timeout='null', deregisterCriticalServiceAfter='null', tlsSkipVerify=null, status='null'}, checks=null}
2020.12.20 11:54:31.452 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020.12.20 11:54:31.453 CST   >> INFO  org.springframework.web.servlet.FrameworkServlet 525 initServletBean - Initializing Servlet 'dispatcherServlet'
2020.12.20 11:54:31.465 CST   >> INFO  org.springframework.web.servlet.FrameworkServlet 547 initServletBean - Completed initialization in 12 ms
2020.12.20 11:54:31.531 CST   >> INFO  org.springframework.boot.StartupInfoLogger 61 logStarted - Started BackofficeRunner in 8.412 seconds (JVM running for 10.744)
2020.12.20 11:55:36.431 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 208 shutdown - Shutting down ExecutorService 'catalogWatchTaskScheduler'
2020.12.20 11:55:36.431 CST   >> INFO  org.springframework.cloud.consul.serviceregistry.ConsulServiceRegistry 93 deregister - Deregistering service with consul: backoffice-service-192-168-2-102-7001
2020.12.20 11:55:36.439 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 208 shutdown - Shutting down ExecutorService 'applicationTaskExecutor'
2020.12.20 11:55:49.826 CST   >> INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker 330 postProcessAfterInitialization - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020.12.20 11:55:51.619 CST   >> INFO  org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration 102 initialize - Located property source: CompositePropertySource {name='consul', propertySources=[ConsulPropertySource {name='backoffice-service/'}, ConsulPropertySource {name='application/'}]}
2020.12.20 11:55:51.670 CST   >> INFO  org.springframework.boot.SpringApplication 651 logStartupProfileInfo - No active profile set, falling back to default profiles: default
2020.12.20 11:55:52.746 CST   >> WARN  org.springframework.boot.actuate.endpoint.EndpointId 155 logWarning - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020.12.20 11:55:52.969 CST   >> INFO  org.springframework.cloud.context.scope.GenericScope 295 setSerializationId - BeanFactory id=c975b231-3742-3dd2-9a77-e2d4aebfddc3
2020.12.20 11:55:53.112 CST   >> INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker 330 postProcessAfterInitialization - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020.12.20 11:55:53.469 CST   >> INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer 92 initialize - Tomcat initialized with port(s): 7001 (http)
2020.12.20 11:55:53.494 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing ProtocolHandler ["http-nio-7001"]
2020.12.20 11:55:53.495 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting service [Tomcat]
2020.12.20 11:55:53.496 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting Servlet engine: [Apache Tomcat/9.0.29]
2020.12.20 11:55:53.679 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing Spring embedded WebApplicationContext
2020.12.20 11:55:53.680 CST   >> INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext 284 prepareWebApplicationContext - Root WebApplicationContext: initialization completed in 1992 ms
2020.12.20 11:55:53.842 CST   >> WARN  com.netflix.config.sources.URLConfigurationSource 121 <init> - No URLs will be polled as dynamic configuration sources.
2020.12.20 11:55:53.843 CST   >> INFO  com.netflix.config.sources.URLConfigurationSource 122 <init> - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020.12.20 11:55:53.868 CST   >> INFO  com.netflix.config.DynamicPropertyFactory 281 getInstance - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@1de5f38
2020.12.20 11:55:55.121 CST   >> WARN  com.netflix.config.sources.URLConfigurationSource 121 <init> - No URLs will be polled as dynamic configuration sources.
2020.12.20 11:55:55.121 CST   >> INFO  com.netflix.config.sources.URLConfigurationSource 122 <init> - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020.12.20 11:55:55.365 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 171 initialize - Initializing ExecutorService 'applicationTaskExecutor'
2020.12.20 11:55:57.422 CST   >> WARN  org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger 106 logWarning - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020.12.20 11:55:57.478 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 171 initialize - Initializing ExecutorService 'catalogWatchTaskScheduler'
2020.12.20 11:55:57.512 CST   >> WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger 81 logWarning - Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020.12.20 11:55:57.543 CST   >> INFO  org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver 58 <init> - Exposing 2 endpoint(s) beneath base path '/actuator'
2020.12.20 11:55:57.701 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting ProtocolHandler ["http-nio-7001"]
2020.12.20 11:55:57.736 CST   >> INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer 204 start - Tomcat started on port(s): 7001 (http) with context path ''
2020.12.20 11:55:57.755 CST   >> INFO  org.springframework.cloud.consul.serviceregistry.ConsulServiceRegistry 65 register - Registering service with consul: NewService{id='backoffice-service-192-168-2-102-7001', name='backoffice-service', tags=[urlprefix-/backoffice-service, secure=false], address='192.168.2.102', meta=null, port=7001, enableTagOverride=null, check=Check{script='null', interval='1s', ttl='null', http='http://192.168.2.102:7001/health', method='null', header={}, tcp='null', timeout='null', deregisterCriticalServiceAfter='null', tlsSkipVerify=null, status='null'}, checks=null}
2020.12.20 11:55:57.961 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020.12.20 11:55:57.961 CST   >> INFO  org.springframework.web.servlet.FrameworkServlet 525 initServletBean - Initializing Servlet 'dispatcherServlet'
2020.12.20 11:55:57.968 CST   >> INFO  org.springframework.web.servlet.FrameworkServlet 547 initServletBean - Completed initialization in 7 ms
2020.12.20 11:55:58.435 CST   >> INFO  org.springframework.boot.StartupInfoLogger 61 logStarted - Started BackofficeRunner in 10.877 seconds (JVM running for 13.894)
2020.12.20 11:56:54.062 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 208 shutdown - Shutting down ExecutorService 'catalogWatchTaskScheduler'
2020.12.20 11:56:54.064 CST   >> INFO  org.springframework.cloud.consul.serviceregistry.ConsulServiceRegistry 93 deregister - Deregistering service with consul: backoffice-service-192-168-2-102-7001
2020.12.20 11:56:54.085 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 208 shutdown - Shutting down ExecutorService 'applicationTaskExecutor'
2020.12.20 11:57:03.114 CST   >> INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker 330 postProcessAfterInitialization - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020.12.20 11:57:04.207 CST   >> INFO  org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration 102 initialize - Located property source: CompositePropertySource {name='consul', propertySources=[ConsulPropertySource {name='backoffice-service/'}, ConsulPropertySource {name='application/'}]}
2020.12.20 11:57:04.243 CST   >> INFO  org.springframework.boot.SpringApplication 651 logStartupProfileInfo - No active profile set, falling back to default profiles: default
2020.12.20 11:57:05.065 CST   >> WARN  org.springframework.boot.actuate.endpoint.EndpointId 155 logWarning - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020.12.20 11:57:05.239 CST   >> INFO  org.springframework.cloud.context.scope.GenericScope 295 setSerializationId - BeanFactory id=c975b231-3742-3dd2-9a77-e2d4aebfddc3
2020.12.20 11:57:05.369 CST   >> INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker 330 postProcessAfterInitialization - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020.12.20 11:57:05.691 CST   >> INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer 92 initialize - Tomcat initialized with port(s): 7001 (http)
2020.12.20 11:57:05.713 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing ProtocolHandler ["http-nio-7001"]
2020.12.20 11:57:05.714 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting service [Tomcat]
2020.12.20 11:57:05.714 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting Servlet engine: [Apache Tomcat/9.0.29]
2020.12.20 11:57:05.872 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing Spring embedded WebApplicationContext
2020.12.20 11:57:05.872 CST   >> INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext 284 prepareWebApplicationContext - Root WebApplicationContext: initialization completed in 1615 ms
2020.12.20 11:57:05.990 CST   >> WARN  com.netflix.config.sources.URLConfigurationSource 121 <init> - No URLs will be polled as dynamic configuration sources.
2020.12.20 11:57:05.991 CST   >> INFO  com.netflix.config.sources.URLConfigurationSource 122 <init> - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020.12.20 11:57:06.009 CST   >> INFO  com.netflix.config.DynamicPropertyFactory 281 getInstance - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@d6ae45
2020.12.20 11:57:06.751 CST   >> WARN  com.netflix.config.sources.URLConfigurationSource 121 <init> - No URLs will be polled as dynamic configuration sources.
2020.12.20 11:57:06.751 CST   >> INFO  com.netflix.config.sources.URLConfigurationSource 122 <init> - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020.12.20 11:57:06.899 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 171 initialize - Initializing ExecutorService 'applicationTaskExecutor'
2020.12.20 11:57:08.087 CST   >> WARN  org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger 106 logWarning - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020.12.20 11:57:08.112 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 171 initialize - Initializing ExecutorService 'catalogWatchTaskScheduler'
2020.12.20 11:57:08.123 CST   >> WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger 81 logWarning - Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020.12.20 11:57:08.162 CST   >> INFO  org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver 58 <init> - Exposing 2 endpoint(s) beneath base path '/actuator'
2020.12.20 11:57:08.283 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting ProtocolHandler ["http-nio-7001"]
2020.12.20 11:57:08.312 CST   >> INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer 204 start - Tomcat started on port(s): 7001 (http) with context path ''
2020.12.20 11:57:08.330 CST   >> INFO  org.springframework.cloud.consul.serviceregistry.ConsulServiceRegistry 65 register - Registering service with consul: NewService{id='backoffice-service-192-168-2-102-7001', name='backoffice-service', tags=[urlprefix-/backoffice-service, secure=false], address='192.168.2.102', meta=null, port=7001, enableTagOverride=null, check=Check{script='null', interval='1s', ttl='null', http='http://192.168.2.102:7001/health', method='null', header={}, tcp='null', timeout='null', deregisterCriticalServiceAfter='null', tlsSkipVerify=null, status='null'}, checks=null}
2020.12.20 11:57:08.803 CST   >> INFO  org.springframework.boot.StartupInfoLogger 61 logStarted - Started BackofficeRunner in 7.235 seconds (JVM running for 9.229)
2020.12.20 11:57:09.145 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020.12.20 11:57:09.145 CST   >> INFO  org.springframework.web.servlet.FrameworkServlet 525 initServletBean - Initializing Servlet 'dispatcherServlet'
2020.12.20 11:57:09.152 CST   >> INFO  org.springframework.web.servlet.FrameworkServlet 547 initServletBean - Completed initialization in 7 ms
2020.12.20 12:05:33.399 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 208 shutdown - Shutting down ExecutorService 'catalogWatchTaskScheduler'
2020.12.20 12:05:33.399 CST   >> INFO  org.springframework.cloud.consul.serviceregistry.ConsulServiceRegistry 93 deregister - Deregistering service with consul: backoffice-service-192-168-2-102-7001
2020.12.20 12:05:33.407 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 208 shutdown - Shutting down ExecutorService 'applicationTaskExecutor'
2020.12.20 12:05:39.869 CST   >> INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker 330 postProcessAfterInitialization - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020.12.20 12:05:40.916 CST   >> INFO  org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration 102 initialize - Located property source: CompositePropertySource {name='consul', propertySources=[ConsulPropertySource {name='backoffice-service/'}, ConsulPropertySource {name='application/'}]}
2020.12.20 12:05:40.951 CST   >> INFO  org.springframework.boot.SpringApplication 651 logStartupProfileInfo - No active profile set, falling back to default profiles: default
2020.12.20 12:05:41.794 CST   >> WARN  org.springframework.boot.actuate.endpoint.EndpointId 155 logWarning - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020.12.20 12:05:42.034 CST   >> INFO  org.springframework.cloud.context.scope.GenericScope 295 setSerializationId - BeanFactory id=c975b231-3742-3dd2-9a77-e2d4aebfddc3
2020.12.20 12:05:42.180 CST   >> INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker 330 postProcessAfterInitialization - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020.12.20 12:05:42.547 CST   >> INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer 92 initialize - Tomcat initialized with port(s): 7001 (http)
2020.12.20 12:05:42.569 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing ProtocolHandler ["http-nio-7001"]
2020.12.20 12:05:42.570 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting service [Tomcat]
2020.12.20 12:05:42.571 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting Servlet engine: [Apache Tomcat/9.0.29]
2020.12.20 12:05:42.741 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing Spring embedded WebApplicationContext
2020.12.20 12:05:42.742 CST   >> INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext 284 prepareWebApplicationContext - Root WebApplicationContext: initialization completed in 1777 ms
2020.12.20 12:05:42.874 CST   >> WARN  com.netflix.config.sources.URLConfigurationSource 121 <init> - No URLs will be polled as dynamic configuration sources.
2020.12.20 12:05:42.875 CST   >> INFO  com.netflix.config.sources.URLConfigurationSource 122 <init> - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020.12.20 12:05:42.897 CST   >> INFO  com.netflix.config.DynamicPropertyFactory 281 getInstance - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@56fcc5
2020.12.20 12:05:43.739 CST   >> WARN  com.netflix.config.sources.URLConfigurationSource 121 <init> - No URLs will be polled as dynamic configuration sources.
2020.12.20 12:05:43.740 CST   >> INFO  com.netflix.config.sources.URLConfigurationSource 122 <init> - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020.12.20 12:05:43.914 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 171 initialize - Initializing ExecutorService 'applicationTaskExecutor'
2020.12.20 12:05:45.158 CST   >> WARN  org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger 106 logWarning - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020.12.20 12:05:45.186 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 171 initialize - Initializing ExecutorService 'catalogWatchTaskScheduler'
2020.12.20 12:05:45.200 CST   >> WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger 81 logWarning - Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020.12.20 12:05:45.248 CST   >> INFO  org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver 58 <init> - Exposing 2 endpoint(s) beneath base path '/actuator'
2020.12.20 12:05:45.391 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting ProtocolHandler ["http-nio-7001"]
2020.12.20 12:05:45.433 CST   >> INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer 204 start - Tomcat started on port(s): 7001 (http) with context path ''
2020.12.20 12:05:45.454 CST   >> INFO  org.springframework.cloud.consul.serviceregistry.ConsulServiceRegistry 65 register - Registering service with consul: NewService{id='backoffice-service-192-168-2-102-7001', name='backoffice-service', tags=[urlprefix-/backoffice-service, secure=false], address='192.168.2.102', meta=null, port=7001, enableTagOverride=null, check=Check{script='null', interval='1s', ttl='null', http='http://192.168.2.102:7001/health', method='null', header={}, tcp='null', timeout='null', deregisterCriticalServiceAfter='null', tlsSkipVerify=null, status='null'}, checks=null}
2020.12.20 12:05:45.846 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020.12.20 12:05:45.846 CST   >> INFO  org.springframework.web.servlet.FrameworkServlet 525 initServletBean - Initializing Servlet 'dispatcherServlet'
2020.12.20 12:05:45.853 CST   >> INFO  org.springframework.web.servlet.FrameworkServlet 547 initServletBean - Completed initialization in 7 ms
2020.12.20 12:05:45.981 CST   >> INFO  org.springframework.boot.StartupInfoLogger 61 logStarted - Started BackofficeRunner in 7.561 seconds (JVM running for 9.698)
2020.12.20 12:10:52.149 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 208 shutdown - Shutting down ExecutorService 'catalogWatchTaskScheduler'
2020.12.20 12:10:52.149 CST   >> INFO  org.springframework.cloud.consul.serviceregistry.ConsulServiceRegistry 93 deregister - Deregistering service with consul: backoffice-service-192-168-2-102-7001
2020.12.20 12:10:52.159 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 208 shutdown - Shutting down ExecutorService 'applicationTaskExecutor'
2020.12.20 12:10:59.678 CST   >> INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker 330 postProcessAfterInitialization - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020.12.20 12:11:00.773 CST   >> INFO  org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration 102 initialize - Located property source: CompositePropertySource {name='consul', propertySources=[ConsulPropertySource {name='backoffice-service/'}, ConsulPropertySource {name='application/'}]}
2020.12.20 12:11:00.810 CST   >> INFO  org.springframework.boot.SpringApplication 651 logStartupProfileInfo - No active profile set, falling back to default profiles: default
2020.12.20 12:11:01.655 CST   >> WARN  org.springframework.boot.actuate.endpoint.EndpointId 155 logWarning - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020.12.20 12:11:01.818 CST   >> INFO  org.springframework.cloud.context.scope.GenericScope 295 setSerializationId - BeanFactory id=5c73e17e-f065-3ab2-8fae-7908cffdda73
2020.12.20 12:11:01.948 CST   >> INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker 330 postProcessAfterInitialization - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020.12.20 12:11:02.262 CST   >> INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer 92 initialize - Tomcat initialized with port(s): 7001 (http)
2020.12.20 12:11:02.282 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing ProtocolHandler ["http-nio-7001"]
2020.12.20 12:11:02.283 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting service [Tomcat]
2020.12.20 12:11:02.284 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting Servlet engine: [Apache Tomcat/9.0.29]
2020.12.20 12:11:02.446 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing Spring embedded WebApplicationContext
2020.12.20 12:11:02.447 CST   >> INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext 284 prepareWebApplicationContext - Root WebApplicationContext: initialization completed in 1621 ms
2020.12.20 12:11:02.553 CST   >> WARN  com.netflix.config.sources.URLConfigurationSource 121 <init> - No URLs will be polled as dynamic configuration sources.
2020.12.20 12:11:02.554 CST   >> INFO  com.netflix.config.sources.URLConfigurationSource 122 <init> - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020.12.20 12:11:02.573 CST   >> INFO  com.netflix.config.DynamicPropertyFactory 281 getInstance - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@128c214
2020.12.20 12:11:03.345 CST   >> WARN  com.netflix.config.sources.URLConfigurationSource 121 <init> - No URLs will be polled as dynamic configuration sources.
2020.12.20 12:11:03.345 CST   >> INFO  com.netflix.config.sources.URLConfigurationSource 122 <init> - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020.12.20 12:11:03.494 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 171 initialize - Initializing ExecutorService 'applicationTaskExecutor'
2020.12.20 12:11:04.949 CST   >> WARN  org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger 106 logWarning - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020.12.20 12:11:04.995 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 171 initialize - Initializing ExecutorService 'catalogWatchTaskScheduler'
2020.12.20 12:11:05.012 CST   >> WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger 81 logWarning - Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020.12.20 12:11:05.086 CST   >> INFO  org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver 58 <init> - Exposing 2 endpoint(s) beneath base path '/actuator'
2020.12.20 12:11:05.405 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting ProtocolHandler ["http-nio-7001"]
2020.12.20 12:11:05.442 CST   >> INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer 204 start - Tomcat started on port(s): 7001 (http) with context path ''
2020.12.20 12:11:05.462 CST   >> INFO  org.springframework.cloud.consul.serviceregistry.ConsulServiceRegistry 65 register - Registering service with consul: NewService{id='backoffice-service-192-168-2-102-7001', name='backoffice-service', tags=[urlprefix-/backoffice-service, secure=false], address='192.168.2.102', meta=null, port=7001, enableTagOverride=null, check=Check{script='null', interval='1s', ttl='null', http='http://192.168.2.102:7001/health', method='null', header={}, tcp='null', timeout='null', deregisterCriticalServiceAfter='null', tlsSkipVerify=null, status='null'}, checks=null}
2020.12.20 12:11:05.549 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020.12.20 12:11:05.550 CST   >> INFO  org.springframework.web.servlet.FrameworkServlet 525 initServletBean - Initializing Servlet 'dispatcherServlet'
2020.12.20 12:11:05.559 CST   >> INFO  org.springframework.web.servlet.FrameworkServlet 547 initServletBean - Completed initialization in 9 ms
2020.12.20 12:11:05.996 CST   >> INFO  org.springframework.boot.StartupInfoLogger 61 logStarted - Started BackofficeRunner in 7.838 seconds (JVM running for 9.73)
2020.12.20 12:11:33.372 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 208 shutdown - Shutting down ExecutorService 'catalogWatchTaskScheduler'
2020.12.20 12:11:33.372 CST   >> INFO  org.springframework.cloud.consul.serviceregistry.ConsulServiceRegistry 93 deregister - Deregistering service with consul: backoffice-service-192-168-2-102-7001
2020.12.20 12:11:33.380 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 208 shutdown - Shutting down ExecutorService 'applicationTaskExecutor'
2020.12.20 12:11:51.573 CST   >> INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker 330 postProcessAfterInitialization - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020.12.20 12:11:52.655 CST   >> INFO  org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration 102 initialize - Located property source: CompositePropertySource {name='consul', propertySources=[ConsulPropertySource {name='backoffice-service/'}, ConsulPropertySource {name='application/'}]}
2020.12.20 12:11:52.690 CST   >> INFO  org.springframework.boot.SpringApplication 651 logStartupProfileInfo - No active profile set, falling back to default profiles: default
2020.12.20 12:11:53.506 CST   >> WARN  org.springframework.boot.actuate.endpoint.EndpointId 155 logWarning - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020.12.20 12:11:53.664 CST   >> INFO  org.springframework.cloud.context.scope.GenericScope 295 setSerializationId - BeanFactory id=5c73e17e-f065-3ab2-8fae-7908cffdda73
2020.12.20 12:11:53.793 CST   >> INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker 330 postProcessAfterInitialization - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020.12.20 12:11:54.108 CST   >> INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer 92 initialize - Tomcat initialized with port(s): 7001 (http)
2020.12.20 12:11:54.127 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing ProtocolHandler ["http-nio-7001"]
2020.12.20 12:11:54.128 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting service [Tomcat]
2020.12.20 12:11:54.129 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting Servlet engine: [Apache Tomcat/9.0.29]
2020.12.20 12:11:54.290 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing Spring embedded WebApplicationContext
2020.12.20 12:11:54.290 CST   >> INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext 284 prepareWebApplicationContext - Root WebApplicationContext: initialization completed in 1586 ms
2020.12.20 12:11:54.407 CST   >> WARN  com.netflix.config.sources.URLConfigurationSource 121 <init> - No URLs will be polled as dynamic configuration sources.
2020.12.20 12:11:54.408 CST   >> INFO  com.netflix.config.sources.URLConfigurationSource 122 <init> - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020.12.20 12:11:54.425 CST   >> INFO  com.netflix.config.DynamicPropertyFactory 281 getInstance - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@177b1a0
2020.12.20 12:11:55.170 CST   >> WARN  com.netflix.config.sources.URLConfigurationSource 121 <init> - No URLs will be polled as dynamic configuration sources.
2020.12.20 12:11:55.170 CST   >> INFO  com.netflix.config.sources.URLConfigurationSource 122 <init> - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020.12.20 12:11:55.328 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 171 initialize - Initializing ExecutorService 'applicationTaskExecutor'
2020.12.20 12:11:56.561 CST   >> WARN  org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger 106 logWarning - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020.12.20 12:11:56.586 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 171 initialize - Initializing ExecutorService 'catalogWatchTaskScheduler'
2020.12.20 12:11:56.598 CST   >> WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger 81 logWarning - Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020.12.20 12:11:56.638 CST   >> INFO  org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver 58 <init> - Exposing 2 endpoint(s) beneath base path '/actuator'
2020.12.20 12:11:56.779 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting ProtocolHandler ["http-nio-7001"]
2020.12.20 12:11:56.809 CST   >> INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer 204 start - Tomcat started on port(s): 7001 (http) with context path ''
2020.12.20 12:11:56.829 CST   >> INFO  org.springframework.cloud.consul.serviceregistry.ConsulServiceRegistry 65 register - Registering service with consul: NewService{id='backoffice-service-192-168-2-102-7001', name='backoffice-service', tags=[urlprefix-/backoffice-service, secure=false], address='192.168.2.102', meta=null, port=7001, enableTagOverride=null, check=Check{script='null', interval='1s', ttl='null', http='http://192.168.2.102:7001/health', method='null', header={}, tcp='null', timeout='null', deregisterCriticalServiceAfter='null', tlsSkipVerify=null, status='null'}, checks=null}
2020.12.20 12:11:57.352 CST   >> INFO  org.springframework.boot.StartupInfoLogger 61 logStarted - Started BackofficeRunner in 7.246 seconds (JVM running for 9.133)
2020.12.20 12:11:57.613 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020.12.20 12:11:57.613 CST   >> INFO  org.springframework.web.servlet.FrameworkServlet 525 initServletBean - Initializing Servlet 'dispatcherServlet'
2020.12.20 12:11:57.621 CST   >> INFO  org.springframework.web.servlet.FrameworkServlet 547 initServletBean - Completed initialization in 8 ms
2020.12.20 12:13:18.528 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 208 shutdown - Shutting down ExecutorService 'catalogWatchTaskScheduler'
2020.12.20 12:13:18.529 CST   >> INFO  org.springframework.cloud.consul.serviceregistry.ConsulServiceRegistry 93 deregister - Deregistering service with consul: backoffice-service-192-168-2-102-7001
2020.12.20 12:13:18.534 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 208 shutdown - Shutting down ExecutorService 'applicationTaskExecutor'
2020.12.20 12:13:33.123 CST   >> INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker 330 postProcessAfterInitialization - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020.12.20 12:13:34.254 CST   >> INFO  org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration 102 initialize - Located property source: CompositePropertySource {name='consul', propertySources=[ConsulPropertySource {name='backoffice-service/'}, ConsulPropertySource {name='application/'}]}
2020.12.20 12:13:34.289 CST   >> INFO  org.springframework.boot.SpringApplication 651 logStartupProfileInfo - No active profile set, falling back to default profiles: default
2020.12.20 12:13:35.097 CST   >> WARN  org.springframework.boot.actuate.endpoint.EndpointId 155 logWarning - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020.12.20 12:13:35.255 CST   >> INFO  org.springframework.cloud.context.scope.GenericScope 295 setSerializationId - BeanFactory id=5c73e17e-f065-3ab2-8fae-7908cffdda73
2020.12.20 12:13:35.385 CST   >> INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker 330 postProcessAfterInitialization - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020.12.20 12:13:35.699 CST   >> INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer 92 initialize - Tomcat initialized with port(s): 7001 (http)
2020.12.20 12:13:35.720 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing ProtocolHandler ["http-nio-7001"]
2020.12.20 12:13:35.721 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting service [Tomcat]
2020.12.20 12:13:35.722 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting Servlet engine: [Apache Tomcat/9.0.29]
2020.12.20 12:13:35.893 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing Spring embedded WebApplicationContext
2020.12.20 12:13:35.893 CST   >> INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext 284 prepareWebApplicationContext - Root WebApplicationContext: initialization completed in 1590 ms
2020.12.20 12:13:35.998 CST   >> WARN  com.netflix.config.sources.URLConfigurationSource 121 <init> - No URLs will be polled as dynamic configuration sources.
2020.12.20 12:13:35.999 CST   >> INFO  com.netflix.config.sources.URLConfigurationSource 122 <init> - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020.12.20 12:13:36.015 CST   >> INFO  com.netflix.config.DynamicPropertyFactory 281 getInstance - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@239337
2020.12.20 12:13:36.768 CST   >> WARN  com.netflix.config.sources.URLConfigurationSource 121 <init> - No URLs will be polled as dynamic configuration sources.
2020.12.20 12:13:36.769 CST   >> INFO  com.netflix.config.sources.URLConfigurationSource 122 <init> - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020.12.20 12:13:36.923 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 171 initialize - Initializing ExecutorService 'applicationTaskExecutor'
2020.12.20 12:13:38.114 CST   >> WARN  org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger 106 logWarning - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020.12.20 12:13:38.139 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 171 initialize - Initializing ExecutorService 'catalogWatchTaskScheduler'
2020.12.20 12:13:38.151 CST   >> WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger 81 logWarning - Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020.12.20 12:13:38.191 CST   >> INFO  org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver 58 <init> - Exposing 2 endpoint(s) beneath base path '/actuator'
2020.12.20 12:13:38.316 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting ProtocolHandler ["http-nio-7001"]
2020.12.20 12:13:38.354 CST   >> INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer 204 start - Tomcat started on port(s): 7001 (http) with context path ''
2020.12.20 12:13:38.374 CST   >> INFO  org.springframework.cloud.consul.serviceregistry.ConsulServiceRegistry 65 register - Registering service with consul: NewService{id='backoffice-service-192-168-2-102-7001', name='backoffice-service', tags=[urlprefix-/backoffice-service, secure=false], address='192.168.2.102', meta=null, port=7001, enableTagOverride=null, check=Check{script='null', interval='1s', ttl='null', http='http://192.168.2.102:7001/health', method='null', header={}, tcp='null', timeout='null', deregisterCriticalServiceAfter='null', tlsSkipVerify=null, status='null'}, checks=null}
2020.12.20 12:13:38.538 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020.12.20 12:13:38.538 CST   >> INFO  org.springframework.web.servlet.FrameworkServlet 525 initServletBean - Initializing Servlet 'dispatcherServlet'
2020.12.20 12:13:38.545 CST   >> INFO  org.springframework.web.servlet.FrameworkServlet 547 initServletBean - Completed initialization in 7 ms
2020.12.20 12:13:38.890 CST   >> INFO  org.springframework.boot.StartupInfoLogger 61 logStarted - Started BackofficeRunner in 7.232 seconds (JVM running for 9.294)
2020.12.20 12:16:41.613 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 208 shutdown - Shutting down ExecutorService 'catalogWatchTaskScheduler'
2020.12.20 12:16:41.613 CST   >> INFO  org.springframework.cloud.consul.serviceregistry.ConsulServiceRegistry 93 deregister - Deregistering service with consul: backoffice-service-192-168-2-102-7001
2020.12.20 12:16:41.621 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 208 shutdown - Shutting down ExecutorService 'applicationTaskExecutor'
2020.12.20 12:17:08.769 CST   >> INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker 330 postProcessAfterInitialization - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020.12.20 12:17:10.027 CST   >> INFO  org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration 102 initialize - Located property source: CompositePropertySource {name='consul', propertySources=[ConsulPropertySource {name='backoffice-service/'}, ConsulPropertySource {name='application/'}]}
2020.12.20 12:17:10.066 CST   >> INFO  org.springframework.boot.SpringApplication 651 logStartupProfileInfo - No active profile set, falling back to default profiles: default
2020.12.20 12:17:11.089 CST   >> WARN  org.springframework.boot.actuate.endpoint.EndpointId 155 logWarning - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020.12.20 12:17:11.265 CST   >> INFO  org.springframework.cloud.context.scope.GenericScope 295 setSerializationId - BeanFactory id=5c73e17e-f065-3ab2-8fae-7908cffdda73
2020.12.20 12:17:11.421 CST   >> INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker 330 postProcessAfterInitialization - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020.12.20 12:17:11.739 CST   >> INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer 92 initialize - Tomcat initialized with port(s): 7001 (http)
2020.12.20 12:17:11.760 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing ProtocolHandler ["http-nio-7001"]
2020.12.20 12:17:11.760 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting service [Tomcat]
2020.12.20 12:17:11.761 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting Servlet engine: [Apache Tomcat/9.0.29]
2020.12.20 12:17:11.917 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing Spring embedded WebApplicationContext
2020.12.20 12:17:11.917 CST   >> INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext 284 prepareWebApplicationContext - Root WebApplicationContext: initialization completed in 1837 ms
2020.12.20 12:17:12.027 CST   >> WARN  com.netflix.config.sources.URLConfigurationSource 121 <init> - No URLs will be polled as dynamic configuration sources.
2020.12.20 12:17:12.028 CST   >> INFO  com.netflix.config.sources.URLConfigurationSource 122 <init> - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020.12.20 12:17:12.044 CST   >> INFO  com.netflix.config.DynamicPropertyFactory 281 getInstance - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@f9a5ef
2020.12.20 12:17:12.786 CST   >> WARN  com.netflix.config.sources.URLConfigurationSource 121 <init> - No URLs will be polled as dynamic configuration sources.
2020.12.20 12:17:12.786 CST   >> INFO  com.netflix.config.sources.URLConfigurationSource 122 <init> - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020.12.20 12:17:12.934 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 171 initialize - Initializing ExecutorService 'applicationTaskExecutor'
2020.12.20 12:17:14.172 CST   >> WARN  org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger 106 logWarning - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020.12.20 12:17:14.201 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 171 initialize - Initializing ExecutorService 'catalogWatchTaskScheduler'
2020.12.20 12:17:14.213 CST   >> WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger 81 logWarning - Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020.12.20 12:17:14.253 CST   >> INFO  org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver 58 <init> - Exposing 2 endpoint(s) beneath base path '/actuator'
2020.12.20 12:17:14.386 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting ProtocolHandler ["http-nio-7001"]
2020.12.20 12:17:14.415 CST   >> INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer 204 start - Tomcat started on port(s): 7001 (http) with context path ''
2020.12.20 12:17:14.436 CST   >> INFO  org.springframework.cloud.consul.serviceregistry.ConsulServiceRegistry 65 register - Registering service with consul: NewService{id='backoffice-service-192-168-2-102-7001', name='backoffice-service', tags=[urlprefix-/backoffice-service, secure=false], address='192.168.2.102', meta=null, port=7001, enableTagOverride=null, check=Check{script='null', interval='1s', ttl='null', http='http://192.168.2.102:7001/health', method='null', header={}, tcp='null', timeout='null', deregisterCriticalServiceAfter='null', tlsSkipVerify=null, status='null'}, checks=null}
2020.12.20 12:17:14.860 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020.12.20 12:17:14.861 CST   >> INFO  org.springframework.web.servlet.FrameworkServlet 525 initServletBean - Initializing Servlet 'dispatcherServlet'
2020.12.20 12:17:14.867 CST   >> INFO  org.springframework.web.servlet.FrameworkServlet 547 initServletBean - Completed initialization in 6 ms
2020.12.20 12:17:14.936 CST   >> INFO  org.springframework.boot.StartupInfoLogger 61 logStarted - Started BackofficeRunner in 8.044 seconds (JVM running for 10.456)
2020.12.20 12:40:24.732 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 208 shutdown - Shutting down ExecutorService 'catalogWatchTaskScheduler'
2020.12.20 12:40:24.733 CST   >> INFO  org.springframework.cloud.consul.serviceregistry.ConsulServiceRegistry 93 deregister - Deregistering service with consul: backoffice-service-192-168-2-102-7001
2020.12.20 12:40:24.740 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 208 shutdown - Shutting down ExecutorService 'applicationTaskExecutor'
2020.12.20 13:32:41.473 CST   >> INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker 330 postProcessAfterInitialization - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020.12.20 13:32:42.654 CST   >> INFO  org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration 102 initialize - Located property source: CompositePropertySource {name='consul', propertySources=[ConsulPropertySource {name='backoffice-service/'}, ConsulPropertySource {name='application/'}]}
2020.12.20 13:32:42.694 CST   >> INFO  org.springframework.boot.SpringApplication 651 logStartupProfileInfo - No active profile set, falling back to default profiles: default
2020.12.20 13:32:43.675 CST   >> WARN  org.springframework.boot.actuate.endpoint.EndpointId 155 logWarning - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020.12.20 13:32:43.866 CST   >> INFO  org.springframework.cloud.context.scope.GenericScope 295 setSerializationId - BeanFactory id=5c73e17e-f065-3ab2-8fae-7908cffdda73
2020.12.20 13:32:44.029 CST   >> INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker 330 postProcessAfterInitialization - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020.12.20 13:32:44.421 CST   >> INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer 92 initialize - Tomcat initialized with port(s): 7001 (http)
2020.12.20 13:32:44.443 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing ProtocolHandler ["http-nio-7001"]
2020.12.20 13:32:44.444 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting service [Tomcat]
2020.12.20 13:32:44.445 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting Servlet engine: [Apache Tomcat/9.0.29]
2020.12.20 13:32:44.612 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing Spring embedded WebApplicationContext
2020.12.20 13:32:44.613 CST   >> INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext 284 prepareWebApplicationContext - Root WebApplicationContext: initialization completed in 1901 ms
2020.12.20 13:32:44.744 CST   >> WARN  com.netflix.config.sources.URLConfigurationSource 121 <init> - No URLs will be polled as dynamic configuration sources.
2020.12.20 13:32:44.745 CST   >> INFO  com.netflix.config.sources.URLConfigurationSource 122 <init> - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020.12.20 13:32:44.764 CST   >> INFO  com.netflix.config.DynamicPropertyFactory 281 getInstance - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@899811
2020.12.20 13:32:45.595 CST   >> WARN  com.netflix.config.sources.URLConfigurationSource 121 <init> - No URLs will be polled as dynamic configuration sources.
2020.12.20 13:32:45.597 CST   >> INFO  com.netflix.config.sources.URLConfigurationSource 122 <init> - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020.12.20 13:32:45.774 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 171 initialize - Initializing ExecutorService 'applicationTaskExecutor'
2020.12.20 13:32:47.070 CST   >> WARN  org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger 106 logWarning - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020.12.20 13:32:47.098 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 171 initialize - Initializing ExecutorService 'catalogWatchTaskScheduler'
2020.12.20 13:32:47.112 CST   >> WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger 81 logWarning - Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020.12.20 13:32:47.158 CST   >> INFO  org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver 58 <init> - Exposing 2 endpoint(s) beneath base path '/actuator'
2020.12.20 13:32:47.297 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting ProtocolHandler ["http-nio-7001"]
2020.12.20 13:32:47.330 CST   >> INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer 204 start - Tomcat started on port(s): 7001 (http) with context path ''
2020.12.20 13:32:47.352 CST   >> INFO  org.springframework.cloud.consul.serviceregistry.ConsulServiceRegistry 65 register - Registering service with consul: NewService{id='backoffice-service-192-168-2-102-7001', name='backoffice-service', tags=[urlprefix-/backoffice-service, secure=false], address='192.168.2.102', meta=null, port=7001, enableTagOverride=null, check=Check{script='null', interval='1s', ttl='null', http='http://192.168.2.102:7001/health', method='null', header={}, tcp='null', timeout='null', deregisterCriticalServiceAfter='null', tlsSkipVerify=null, status='null'}, checks=null}
2020.12.20 13:32:47.849 CST   >> INFO  org.springframework.boot.StartupInfoLogger 61 logStarted - Started BackofficeRunner in 8.318 seconds (JVM running for 11.28)
2020.12.20 13:32:48.303 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020.12.20 13:32:48.304 CST   >> INFO  org.springframework.web.servlet.FrameworkServlet 525 initServletBean - Initializing Servlet 'dispatcherServlet'
2020.12.20 13:32:48.311 CST   >> INFO  org.springframework.web.servlet.FrameworkServlet 547 initServletBean - Completed initialization in 7 ms
2020.12.20 13:52:13.254 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 208 shutdown - Shutting down ExecutorService 'catalogWatchTaskScheduler'
2020.12.20 13:52:13.255 CST   >> INFO  org.springframework.cloud.consul.serviceregistry.ConsulServiceRegistry 93 deregister - Deregistering service with consul: backoffice-service-192-168-2-102-7001
2020.12.20 13:52:13.281 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 208 shutdown - Shutting down ExecutorService 'applicationTaskExecutor'
2020.12.20 14:02:09.358 CST   >> INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker 330 postProcessAfterInitialization - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020.12.20 14:02:10.488 CST   >> INFO  org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration 102 initialize - Located property source: CompositePropertySource {name='consul', propertySources=[ConsulPropertySource {name='backoffice-service/'}, ConsulPropertySource {name='application/'}]}
2020.12.20 14:02:10.526 CST   >> INFO  org.springframework.boot.SpringApplication 651 logStartupProfileInfo - No active profile set, falling back to default profiles: default
2020.12.20 14:02:11.365 CST   >> WARN  org.springframework.boot.actuate.endpoint.EndpointId 155 logWarning - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020.12.20 14:02:11.532 CST   >> INFO  org.springframework.cloud.context.scope.GenericScope 295 setSerializationId - BeanFactory id=5c73e17e-f065-3ab2-8fae-7908cffdda73
2020.12.20 14:02:11.668 CST   >> INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker 330 postProcessAfterInitialization - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020.12.20 14:02:12.014 CST   >> INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer 92 initialize - Tomcat initialized with port(s): 7001 (http)
2020.12.20 14:02:12.035 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing ProtocolHandler ["http-nio-7001"]
2020.12.20 14:02:12.036 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting service [Tomcat]
2020.12.20 14:02:12.036 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting Servlet engine: [Apache Tomcat/9.0.29]
2020.12.20 14:02:12.209 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing Spring embedded WebApplicationContext
2020.12.20 14:02:12.209 CST   >> INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext 284 prepareWebApplicationContext - Root WebApplicationContext: initialization completed in 1668 ms
2020.12.20 14:02:12.314 CST   >> WARN  com.netflix.config.sources.URLConfigurationSource 121 <init> - No URLs will be polled as dynamic configuration sources.
2020.12.20 14:02:12.315 CST   >> INFO  com.netflix.config.sources.URLConfigurationSource 122 <init> - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020.12.20 14:02:12.333 CST   >> INFO  com.netflix.config.DynamicPropertyFactory 281 getInstance - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@19846cc
2020.12.20 14:02:13.154 CST   >> WARN  com.netflix.config.sources.URLConfigurationSource 121 <init> - No URLs will be polled as dynamic configuration sources.
2020.12.20 14:02:13.154 CST   >> INFO  com.netflix.config.sources.URLConfigurationSource 122 <init> - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020.12.20 14:02:13.312 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 171 initialize - Initializing ExecutorService 'applicationTaskExecutor'
2020.12.20 14:02:14.522 CST   >> WARN  org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger 106 logWarning - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020.12.20 14:02:14.546 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 171 initialize - Initializing ExecutorService 'catalogWatchTaskScheduler'
2020.12.20 14:02:14.560 CST   >> WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger 81 logWarning - Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020.12.20 14:02:14.602 CST   >> INFO  org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver 58 <init> - Exposing 2 endpoint(s) beneath base path '/actuator'
2020.12.20 14:02:14.744 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting ProtocolHandler ["http-nio-7001"]
2020.12.20 14:02:14.776 CST   >> INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer 204 start - Tomcat started on port(s): 7001 (http) with context path ''
2020.12.20 14:02:14.796 CST   >> INFO  org.springframework.cloud.consul.serviceregistry.ConsulServiceRegistry 65 register - Registering service with consul: NewService{id='backoffice-service-192-168-2-102-7001', name='backoffice-service', tags=[urlprefix-/backoffice-service, secure=false], address='192.168.2.102', meta=null, port=7001, enableTagOverride=null, check=Check{script='null', interval='1s', ttl='null', http='http://192.168.2.102:7001/health', method='null', header={}, tcp='null', timeout='null', deregisterCriticalServiceAfter='null', tlsSkipVerify=null, status='null'}, checks=null}
2020.12.20 14:02:14.927 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020.12.20 14:02:14.927 CST   >> INFO  org.springframework.web.servlet.FrameworkServlet 525 initServletBean - Initializing Servlet 'dispatcherServlet'
2020.12.20 14:02:14.936 CST   >> INFO  org.springframework.web.servlet.FrameworkServlet 547 initServletBean - Completed initialization in 9 ms
2020.12.20 14:02:15.310 CST   >> INFO  org.springframework.boot.StartupInfoLogger 61 logStarted - Started BackofficeRunner in 7.721 seconds (JVM running for 9.766)
2020.12.20 19:29:33.631 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 208 shutdown - Shutting down ExecutorService 'catalogWatchTaskScheduler'
2020.12.20 19:29:33.632 CST   >> INFO  org.springframework.cloud.consul.serviceregistry.ConsulServiceRegistry 93 deregister - Deregistering service with consul: backoffice-service-192-168-2-102-7001
2020.12.20 19:29:33.644 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 208 shutdown - Shutting down ExecutorService 'applicationTaskExecutor'
2020.12.20 19:30:45.175 CST   >> INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker 330 postProcessAfterInitialization - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020.12.20 19:30:46.410 CST   >> INFO  org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration 102 initialize - Located property source: CompositePropertySource {name='consul', propertySources=[ConsulPropertySource {name='backoffice-service/'}, ConsulPropertySource {name='application/'}]}
2020.12.20 19:30:46.452 CST   >> INFO  org.springframework.boot.SpringApplication 651 logStartupProfileInfo - No active profile set, falling back to default profiles: default
2020.12.20 19:30:47.538 CST   >> WARN  org.springframework.boot.actuate.endpoint.EndpointId 155 logWarning - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020.12.20 19:30:47.746 CST   >> INFO  org.springframework.cloud.context.scope.GenericScope 295 setSerializationId - BeanFactory id=5c73e17e-f065-3ab2-8fae-7908cffdda73
2020.12.20 19:30:47.902 CST   >> INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker 330 postProcessAfterInitialization - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020.12.20 19:30:48.271 CST   >> INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer 92 initialize - Tomcat initialized with port(s): 7001 (http)
2020.12.20 19:30:48.295 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing ProtocolHandler ["http-nio-7001"]
2020.12.20 19:30:48.296 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting service [Tomcat]
2020.12.20 19:30:48.297 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting Servlet engine: [Apache Tomcat/9.0.29]
2020.12.20 19:30:48.479 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing Spring embedded WebApplicationContext
2020.12.20 19:30:48.479 CST   >> INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext 284 prepareWebApplicationContext - Root WebApplicationContext: initialization completed in 2010 ms
2020.12.20 19:30:48.600 CST   >> WARN  com.netflix.config.sources.URLConfigurationSource 121 <init> - No URLs will be polled as dynamic configuration sources.
2020.12.20 19:30:48.601 CST   >> INFO  com.netflix.config.sources.URLConfigurationSource 122 <init> - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020.12.20 19:30:48.618 CST   >> INFO  com.netflix.config.DynamicPropertyFactory 281 getInstance - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@4d1c7b
2020.12.20 19:30:49.448 CST   >> WARN  com.netflix.config.sources.URLConfigurationSource 121 <init> - No URLs will be polled as dynamic configuration sources.
2020.12.20 19:30:49.448 CST   >> INFO  com.netflix.config.sources.URLConfigurationSource 122 <init> - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020.12.20 19:30:49.608 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 171 initialize - Initializing ExecutorService 'applicationTaskExecutor'
2020.12.20 19:30:50.857 CST   >> WARN  org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger 106 logWarning - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020.12.20 19:30:50.896 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 171 initialize - Initializing ExecutorService 'catalogWatchTaskScheduler'
2020.12.20 19:30:50.909 CST   >> WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger 81 logWarning - Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020.12.20 19:30:50.936 CST   >> INFO  org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver 58 <init> - Exposing 2 endpoint(s) beneath base path '/actuator'
2020.12.20 19:30:51.079 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting ProtocolHandler ["http-nio-7001"]
2020.12.20 19:30:51.115 CST   >> INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer 204 start - Tomcat started on port(s): 7001 (http) with context path ''
2020.12.20 19:30:51.137 CST   >> INFO  org.springframework.cloud.consul.serviceregistry.ConsulServiceRegistry 65 register - Registering service with consul: NewService{id='backoffice-service-192-168-2-102-7001', name='backoffice-service', tags=[urlprefix-/backoffice-service, secure=false], address='192.168.2.102', meta=null, port=7001, enableTagOverride=null, check=Check{script='null', interval='1s', ttl='null', http='http://192.168.2.102:7001/health', method='null', header={}, tcp='null', timeout='null', deregisterCriticalServiceAfter='null', tlsSkipVerify=null, status='null'}, checks=null}
2020.12.20 19:30:51.611 CST   >> INFO  org.springframework.boot.StartupInfoLogger 61 logStarted - Started BackofficeRunner in 8.177 seconds (JVM running for 10.936)
2020.12.20 19:30:52.226 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020.12.20 19:30:52.226 CST   >> INFO  org.springframework.web.servlet.FrameworkServlet 525 initServletBean - Initializing Servlet 'dispatcherServlet'
2020.12.20 19:30:52.236 CST   >> INFO  org.springframework.web.servlet.FrameworkServlet 547 initServletBean - Completed initialization in 9 ms
2020.12.20 19:31:13.366 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 208 shutdown - Shutting down ExecutorService 'catalogWatchTaskScheduler'
2020.12.20 19:31:13.366 CST   >> INFO  org.springframework.cloud.consul.serviceregistry.ConsulServiceRegistry 93 deregister - Deregistering service with consul: backoffice-service-192-168-2-102-7001
2020.12.20 19:31:13.373 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 208 shutdown - Shutting down ExecutorService 'applicationTaskExecutor'
2020.12.20 19:31:21.677 CST   >> INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker 330 postProcessAfterInitialization - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020.12.20 19:31:22.763 CST   >> INFO  org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration 102 initialize - Located property source: CompositePropertySource {name='consul', propertySources=[ConsulPropertySource {name='backoffice-service/'}, ConsulPropertySource {name='application/'}]}
2020.12.20 19:31:22.798 CST   >> INFO  org.springframework.boot.SpringApplication 651 logStartupProfileInfo - No active profile set, falling back to default profiles: default
2020.12.20 19:31:23.652 CST   >> WARN  org.springframework.boot.actuate.endpoint.EndpointId 155 logWarning - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020.12.20 19:31:23.812 CST   >> INFO  org.springframework.cloud.context.scope.GenericScope 295 setSerializationId - BeanFactory id=5c73e17e-f065-3ab2-8fae-7908cffdda73
2020.12.20 19:31:23.960 CST   >> INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker 330 postProcessAfterInitialization - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020.12.20 19:31:24.282 CST   >> INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer 92 initialize - Tomcat initialized with port(s): 7001 (http)
2020.12.20 19:31:24.302 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing ProtocolHandler ["http-nio-7001"]
2020.12.20 19:31:24.303 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting service [Tomcat]
2020.12.20 19:31:24.303 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting Servlet engine: [Apache Tomcat/9.0.29]
2020.12.20 19:31:24.461 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing Spring embedded WebApplicationContext
2020.12.20 19:31:24.461 CST   >> INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext 284 prepareWebApplicationContext - Root WebApplicationContext: initialization completed in 1646 ms
2020.12.20 19:31:24.571 CST   >> WARN  com.netflix.config.sources.URLConfigurationSource 121 <init> - No URLs will be polled as dynamic configuration sources.
2020.12.20 19:31:24.572 CST   >> INFO  com.netflix.config.sources.URLConfigurationSource 122 <init> - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020.12.20 19:31:24.587 CST   >> INFO  com.netflix.config.DynamicPropertyFactory 281 getInstance - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@1e2fe3b
2020.12.20 19:31:25.330 CST   >> WARN  com.netflix.config.sources.URLConfigurationSource 121 <init> - No URLs will be polled as dynamic configuration sources.
2020.12.20 19:31:25.330 CST   >> INFO  com.netflix.config.sources.URLConfigurationSource 122 <init> - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020.12.20 19:31:25.480 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 171 initialize - Initializing ExecutorService 'applicationTaskExecutor'
2020.12.20 19:31:26.667 CST   >> WARN  org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger 106 logWarning - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020.12.20 19:31:26.691 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 171 initialize - Initializing ExecutorService 'catalogWatchTaskScheduler'
2020.12.20 19:31:26.703 CST   >> WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger 81 logWarning - Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020.12.20 19:31:26.743 CST   >> INFO  org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver 58 <init> - Exposing 2 endpoint(s) beneath base path '/actuator'
2020.12.20 19:31:26.882 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting ProtocolHandler ["http-nio-7001"]
2020.12.20 19:31:26.916 CST   >> INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer 204 start - Tomcat started on port(s): 7001 (http) with context path ''
2020.12.20 19:31:26.938 CST   >> INFO  org.springframework.cloud.consul.serviceregistry.ConsulServiceRegistry 65 register - Registering service with consul: NewService{id='backoffice-service-192-168-2-102-7001', name='backoffice-service', tags=[urlprefix-/backoffice-service, secure=false], address='192.168.2.102', meta=null, port=7001, enableTagOverride=null, check=Check{script='null', interval='1s', ttl='null', http='http://192.168.2.102:7001/health', method='null', header={}, tcp='null', timeout='null', deregisterCriticalServiceAfter='null', tlsSkipVerify=null, status='null'}, checks=null}
2020.12.20 19:31:27.428 CST   >> INFO  org.springframework.boot.StartupInfoLogger 61 logStarted - Started BackofficeRunner in 7.248 seconds (JVM running for 9.114)
2020.12.20 19:31:27.908 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020.12.20 19:31:27.908 CST   >> INFO  org.springframework.web.servlet.FrameworkServlet 525 initServletBean - Initializing Servlet 'dispatcherServlet'
2020.12.20 19:31:27.917 CST   >> INFO  org.springframework.web.servlet.FrameworkServlet 547 initServletBean - Completed initialization in 9 ms
2020.12.20 19:34:11.070 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 208 shutdown - Shutting down ExecutorService 'catalogWatchTaskScheduler'
2020.12.20 19:34:11.072 CST   >> INFO  org.springframework.cloud.consul.serviceregistry.ConsulServiceRegistry 93 deregister - Deregistering service with consul: backoffice-service-192-168-2-102-7001
2020.12.20 19:34:11.097 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 208 shutdown - Shutting down ExecutorService 'applicationTaskExecutor'
2020.12.20 19:34:41.596 CST   >> INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker 330 postProcessAfterInitialization - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020.12.20 19:34:42.814 CST   >> INFO  org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration 102 initialize - Located property source: CompositePropertySource {name='consul', propertySources=[ConsulPropertySource {name='backoffice-service/'}, ConsulPropertySource {name='application/'}]}
2020.12.20 19:34:42.870 CST   >> INFO  org.springframework.boot.SpringApplication 651 logStartupProfileInfo - No active profile set, falling back to default profiles: default
2020.12.20 19:34:43.787 CST   >> WARN  org.springframework.boot.actuate.endpoint.EndpointId 155 logWarning - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020.12.20 19:34:43.960 CST   >> INFO  org.springframework.cloud.context.scope.GenericScope 295 setSerializationId - BeanFactory id=5c73e17e-f065-3ab2-8fae-7908cffdda73
2020.12.20 19:34:44.099 CST   >> INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker 330 postProcessAfterInitialization - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020.12.20 19:34:44.459 CST   >> INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer 92 initialize - Tomcat initialized with port(s): 7001 (http)
2020.12.20 19:34:44.482 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing ProtocolHandler ["http-nio-7001"]
2020.12.20 19:34:44.483 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting service [Tomcat]
2020.12.20 19:34:44.484 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting Servlet engine: [Apache Tomcat/9.0.29]
2020.12.20 19:34:44.661 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing Spring embedded WebApplicationContext
2020.12.20 19:34:44.661 CST   >> INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext 284 prepareWebApplicationContext - Root WebApplicationContext: initialization completed in 1773 ms
2020.12.20 19:34:44.779 CST   >> WARN  com.netflix.config.sources.URLConfigurationSource 121 <init> - No URLs will be polled as dynamic configuration sources.
2020.12.20 19:34:44.779 CST   >> INFO  com.netflix.config.sources.URLConfigurationSource 122 <init> - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020.12.20 19:34:44.794 CST   >> INFO  com.netflix.config.DynamicPropertyFactory 281 getInstance - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@171aa66
2020.12.20 19:34:45.576 CST   >> WARN  com.netflix.config.sources.URLConfigurationSource 121 <init> - No URLs will be polled as dynamic configuration sources.
2020.12.20 19:34:45.577 CST   >> INFO  com.netflix.config.sources.URLConfigurationSource 122 <init> - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020.12.20 19:34:45.728 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 171 initialize - Initializing ExecutorService 'applicationTaskExecutor'
2020.12.20 19:34:46.907 CST   >> WARN  org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger 106 logWarning - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020.12.20 19:34:46.931 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 171 initialize - Initializing ExecutorService 'catalogWatchTaskScheduler'
2020.12.20 19:34:46.942 CST   >> WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger 81 logWarning - Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020.12.20 19:34:46.982 CST   >> INFO  org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver 58 <init> - Exposing 2 endpoint(s) beneath base path '/actuator'
2020.12.20 19:34:47.120 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting ProtocolHandler ["http-nio-7001"]
2020.12.20 19:34:47.153 CST   >> INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer 204 start - Tomcat started on port(s): 7001 (http) with context path ''
2020.12.20 19:34:47.172 CST   >> INFO  org.springframework.cloud.consul.serviceregistry.ConsulServiceRegistry 65 register - Registering service with consul: NewService{id='backoffice-service-192-168-2-102-7001', name='backoffice-service', tags=[urlprefix-/backoffice-service, secure=false], address='192.168.2.102', meta=null, port=7001, enableTagOverride=null, check=Check{script='null', interval='1s', ttl='null', http='http://192.168.2.102:7001/health', method='null', header={}, tcp='null', timeout='null', deregisterCriticalServiceAfter='null', tlsSkipVerify=null, status='null'}, checks=null}
2020.12.20 19:34:47.647 CST   >> INFO  org.springframework.boot.StartupInfoLogger 61 logStarted - Started BackofficeRunner in 7.632 seconds (JVM running for 9.728)
2020.12.20 19:34:48.116 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020.12.20 19:34:48.116 CST   >> INFO  org.springframework.web.servlet.FrameworkServlet 525 initServletBean - Initializing Servlet 'dispatcherServlet'
2020.12.20 19:34:48.124 CST   >> INFO  org.springframework.web.servlet.FrameworkServlet 547 initServletBean - Completed initialization in 8 ms
2020.12.20 19:36:09.716 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 208 shutdown - Shutting down ExecutorService 'catalogWatchTaskScheduler'
2020.12.20 19:36:09.716 CST   >> INFO  org.springframework.cloud.consul.serviceregistry.ConsulServiceRegistry 93 deregister - Deregistering service with consul: backoffice-service-192-168-2-102-7001
2020.12.20 19:36:09.723 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 208 shutdown - Shutting down ExecutorService 'applicationTaskExecutor'
2020.12.20 19:37:15.049 CST   >> INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker 330 postProcessAfterInitialization - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020.12.20 19:37:16.118 CST   >> INFO  org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration 102 initialize - Located property source: CompositePropertySource {name='consul', propertySources=[ConsulPropertySource {name='backoffice-service/'}, ConsulPropertySource {name='application/'}]}
2020.12.20 19:37:16.157 CST   >> INFO  org.springframework.boot.SpringApplication 651 logStartupProfileInfo - No active profile set, falling back to default profiles: default
2020.12.20 19:37:16.960 CST   >> WARN  org.springframework.boot.actuate.endpoint.EndpointId 155 logWarning - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020.12.20 19:37:17.123 CST   >> INFO  org.springframework.cloud.context.scope.GenericScope 295 setSerializationId - BeanFactory id=5c73e17e-f065-3ab2-8fae-7908cffdda73
2020.12.20 19:37:17.262 CST   >> INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker 330 postProcessAfterInitialization - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020.12.20 19:37:17.599 CST   >> INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer 92 initialize - Tomcat initialized with port(s): 7001 (http)
2020.12.20 19:37:17.618 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing ProtocolHandler ["http-nio-7001"]
2020.12.20 19:37:17.619 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting service [Tomcat]
2020.12.20 19:37:17.620 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting Servlet engine: [Apache Tomcat/9.0.29]
2020.12.20 19:37:17.771 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing Spring embedded WebApplicationContext
2020.12.20 19:37:17.771 CST   >> INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext 284 prepareWebApplicationContext - Root WebApplicationContext: initialization completed in 1602 ms
2020.12.20 19:37:17.879 CST   >> WARN  com.netflix.config.sources.URLConfigurationSource 121 <init> - No URLs will be polled as dynamic configuration sources.
2020.12.20 19:37:17.880 CST   >> INFO  com.netflix.config.sources.URLConfigurationSource 122 <init> - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020.12.20 19:37:17.894 CST   >> INFO  com.netflix.config.DynamicPropertyFactory 281 getInstance - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@ff7063
2020.12.20 19:37:18.637 CST   >> WARN  com.netflix.config.sources.URLConfigurationSource 121 <init> - No URLs will be polled as dynamic configuration sources.
2020.12.20 19:37:18.637 CST   >> INFO  com.netflix.config.sources.URLConfigurationSource 122 <init> - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020.12.20 19:37:18.783 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 171 initialize - Initializing ExecutorService 'applicationTaskExecutor'
2020.12.20 19:37:19.971 CST   >> WARN  org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger 106 logWarning - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020.12.20 19:37:19.994 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 171 initialize - Initializing ExecutorService 'catalogWatchTaskScheduler'
2020.12.20 19:37:20.020 CST   >> WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger 81 logWarning - Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020.12.20 19:37:20.044 CST   >> INFO  org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver 58 <init> - Exposing 2 endpoint(s) beneath base path '/actuator'
2020.12.20 19:37:20.175 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting ProtocolHandler ["http-nio-7001"]
2020.12.20 19:37:20.204 CST   >> INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer 204 start - Tomcat started on port(s): 7001 (http) with context path ''
2020.12.20 19:37:20.220 CST   >> INFO  org.springframework.cloud.consul.serviceregistry.ConsulServiceRegistry 65 register - Registering service with consul: NewService{id='backoffice-service-192-168-2-102-7001', name='backoffice-service', tags=[urlprefix-/backoffice-service, secure=false], address='192.168.2.102', meta=null, port=7001, enableTagOverride=null, check=Check{script='null', interval='1s', ttl='null', http='http://192.168.2.102:7001/health', method='null', header={}, tcp='null', timeout='null', deregisterCriticalServiceAfter='null', tlsSkipVerify=null, status='null'}, checks=null}
2020.12.20 19:37:20.429 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020.12.20 19:37:20.429 CST   >> INFO  org.springframework.web.servlet.FrameworkServlet 525 initServletBean - Initializing Servlet 'dispatcherServlet'
2020.12.20 19:37:20.436 CST   >> INFO  org.springframework.web.servlet.FrameworkServlet 547 initServletBean - Completed initialization in 7 ms
2020.12.20 19:37:20.757 CST   >> INFO  org.springframework.boot.StartupInfoLogger 61 logStarted - Started BackofficeRunner in 7.184 seconds (JVM running for 9.274)
2020.12.20 19:38:19.421 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 208 shutdown - Shutting down ExecutorService 'catalogWatchTaskScheduler'
2020.12.20 19:38:19.424 CST   >> INFO  org.springframework.cloud.consul.serviceregistry.ConsulServiceRegistry 93 deregister - Deregistering service with consul: backoffice-service-192-168-2-102-7001
2020.12.20 19:38:19.445 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 208 shutdown - Shutting down ExecutorService 'applicationTaskExecutor'
2020.12.20 20:19:29.436 CST   >> INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker 330 postProcessAfterInitialization - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020.12.20 20:19:30.771 CST   >> INFO  org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration 102 initialize - Located property source: CompositePropertySource {name='consul', propertySources=[ConsulPropertySource {name='backoffice-service/'}, ConsulPropertySource {name='application/'}]}
2020.12.20 20:19:30.820 CST   >> INFO  org.springframework.boot.SpringApplication 651 logStartupProfileInfo - No active profile set, falling back to default profiles: default
2020.12.20 20:19:31.846 CST   >> WARN  org.springframework.boot.actuate.endpoint.EndpointId 155 logWarning - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020.12.20 20:19:32.040 CST   >> INFO  org.springframework.cloud.context.scope.GenericScope 295 setSerializationId - BeanFactory id=6c3a42ad-d9df-3011-bc59-da1d6761f3a1
2020.12.20 20:19:32.192 CST   >> INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker 330 postProcessAfterInitialization - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020.12.20 20:19:32.586 CST   >> INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer 92 initialize - Tomcat initialized with port(s): 7001 (http)
2020.12.20 20:19:32.610 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing ProtocolHandler ["http-nio-7001"]
2020.12.20 20:19:32.611 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting service [Tomcat]
2020.12.20 20:19:32.612 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting Servlet engine: [Apache Tomcat/9.0.29]
2020.12.20 20:19:32.799 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing Spring embedded WebApplicationContext
2020.12.20 20:19:32.799 CST   >> INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext 284 prepareWebApplicationContext - Root WebApplicationContext: initialization completed in 1962 ms
2020.12.20 20:19:32.925 CST   >> WARN  com.netflix.config.sources.URLConfigurationSource 121 <init> - No URLs will be polled as dynamic configuration sources.
2020.12.20 20:19:32.926 CST   >> INFO  com.netflix.config.sources.URLConfigurationSource 122 <init> - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020.12.20 20:19:32.943 CST   >> INFO  com.netflix.config.DynamicPropertyFactory 281 getInstance - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@1b447a4
2020.12.20 20:19:33.768 CST   >> WARN  com.netflix.config.sources.URLConfigurationSource 121 <init> - No URLs will be polled as dynamic configuration sources.
2020.12.20 20:19:33.768 CST   >> INFO  com.netflix.config.sources.URLConfigurationSource 122 <init> - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020.12.20 20:19:33.936 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 171 initialize - Initializing ExecutorService 'applicationTaskExecutor'
2020.12.20 20:19:35.209 CST   >> WARN  org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger 106 logWarning - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020.12.20 20:19:35.235 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 171 initialize - Initializing ExecutorService 'catalogWatchTaskScheduler'
2020.12.20 20:19:35.248 CST   >> WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger 81 logWarning - Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020.12.20 20:19:35.291 CST   >> INFO  org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver 58 <init> - Exposing 2 endpoint(s) beneath base path '/actuator'
2020.12.20 20:19:35.432 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting ProtocolHandler ["http-nio-7001"]
2020.12.20 20:19:35.464 CST   >> INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer 204 start - Tomcat started on port(s): 7001 (http) with context path ''
2020.12.20 20:19:35.483 CST   >> INFO  org.springframework.cloud.consul.serviceregistry.ConsulServiceRegistry 65 register - Registering service with consul: NewService{id='backoffice-service-192-168-2-102-7001', name='backoffice-service', tags=[urlprefix-/backoffice-service, secure=false], address='192.168.2.102', meta=null, port=7001, enableTagOverride=null, check=Check{script='null', interval='1s', ttl='null', http='http://192.168.2.102:7001/health', method='null', header={}, tcp='null', timeout='null', deregisterCriticalServiceAfter='null', tlsSkipVerify=null, status='null'}, checks=null}
2020.12.20 20:19:35.973 CST   >> INFO  org.springframework.boot.StartupInfoLogger 61 logStarted - Started BackofficeRunner in 8.614 seconds (JVM running for 11.357)
2020.12.20 20:19:36.236 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020.12.20 20:19:36.237 CST   >> INFO  org.springframework.web.servlet.FrameworkServlet 525 initServletBean - Initializing Servlet 'dispatcherServlet'
2020.12.20 20:19:36.244 CST   >> INFO  org.springframework.web.servlet.FrameworkServlet 547 initServletBean - Completed initialization in 7 ms
2020.12.20 20:19:48.612 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 208 shutdown - Shutting down ExecutorService 'catalogWatchTaskScheduler'
2020.12.20 20:19:48.614 CST   >> INFO  org.springframework.cloud.consul.serviceregistry.ConsulServiceRegistry 93 deregister - Deregistering service with consul: backoffice-service-192-168-2-102-7001
2020.12.20 20:19:48.645 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 208 shutdown - Shutting down ExecutorService 'applicationTaskExecutor'
2020.12.20 20:20:03.681 CST   >> INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker 330 postProcessAfterInitialization - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020.12.20 20:20:04.900 CST   >> INFO  org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration 102 initialize - Located property source: CompositePropertySource {name='consul', propertySources=[ConsulPropertySource {name='backoffice-service/'}, ConsulPropertySource {name='application/'}]}
2020.12.20 20:20:04.952 CST   >> INFO  org.springframework.boot.SpringApplication 651 logStartupProfileInfo - No active profile set, falling back to default profiles: default
2020.12.20 20:20:05.945 CST   >> WARN  org.springframework.boot.actuate.endpoint.EndpointId 155 logWarning - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020.12.20 20:20:06.140 CST   >> INFO  org.springframework.cloud.context.scope.GenericScope 295 setSerializationId - BeanFactory id=6c3a42ad-d9df-3011-bc59-da1d6761f3a1
2020.12.20 20:20:06.291 CST   >> INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker 330 postProcessAfterInitialization - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020.12.20 20:20:06.671 CST   >> INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer 92 initialize - Tomcat initialized with port(s): 7001 (http)
2020.12.20 20:20:06.695 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing ProtocolHandler ["http-nio-7001"]
2020.12.20 20:20:06.696 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting service [Tomcat]
2020.12.20 20:20:06.697 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting Servlet engine: [Apache Tomcat/9.0.29]
2020.12.20 20:20:06.888 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing Spring embedded WebApplicationContext
2020.12.20 20:20:06.888 CST   >> INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext 284 prepareWebApplicationContext - Root WebApplicationContext: initialization completed in 1920 ms
2020.12.20 20:20:07.027 CST   >> WARN  com.netflix.config.sources.URLConfigurationSource 121 <init> - No URLs will be polled as dynamic configuration sources.
2020.12.20 20:20:07.028 CST   >> INFO  com.netflix.config.sources.URLConfigurationSource 122 <init> - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020.12.20 20:20:07.052 CST   >> INFO  com.netflix.config.DynamicPropertyFactory 281 getInstance - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@1e8d917
2020.12.20 20:20:08.033 CST   >> WARN  com.netflix.config.sources.URLConfigurationSource 121 <init> - No URLs will be polled as dynamic configuration sources.
2020.12.20 20:20:08.033 CST   >> INFO  com.netflix.config.sources.URLConfigurationSource 122 <init> - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020.12.20 20:20:08.221 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 171 initialize - Initializing ExecutorService 'applicationTaskExecutor'
2020.12.20 20:20:09.566 CST   >> WARN  org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger 106 logWarning - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020.12.20 20:20:09.592 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 171 initialize - Initializing ExecutorService 'catalogWatchTaskScheduler'
2020.12.20 20:20:09.604 CST   >> WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger 81 logWarning - Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020.12.20 20:20:09.647 CST   >> INFO  org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver 58 <init> - Exposing 2 endpoint(s) beneath base path '/actuator'
2020.12.20 20:20:09.784 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting ProtocolHandler ["http-nio-7001"]
2020.12.20 20:20:09.818 CST   >> INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer 204 start - Tomcat started on port(s): 7001 (http) with context path ''
2020.12.20 20:20:09.846 CST   >> INFO  org.springframework.cloud.consul.serviceregistry.ConsulServiceRegistry 65 register - Registering service with consul: NewService{id='backoffice-service-192-168-2-102-7001', name='backoffice-service', tags=[urlprefix-/backoffice-service, secure=false], address='192.168.2.102', meta=null, port=7001, enableTagOverride=null, check=Check{script='null', interval='1s', ttl='null', http='http://192.168.2.102:7001/health', method='null', header={}, tcp='null', timeout='null', deregisterCriticalServiceAfter='null', tlsSkipVerify=null, status='null'}, checks=null}
2020.12.20 20:20:10.337 CST   >> INFO  org.springframework.boot.StartupInfoLogger 61 logStarted - Started BackofficeRunner in 8.687 seconds (JVM running for 11.234)
2020.12.20 20:20:10.739 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020.12.20 20:20:10.739 CST   >> INFO  org.springframework.web.servlet.FrameworkServlet 525 initServletBean - Initializing Servlet 'dispatcherServlet'
2020.12.20 20:20:10.746 CST   >> INFO  org.springframework.web.servlet.FrameworkServlet 547 initServletBean - Completed initialization in 7 ms
2020.12.20 20:20:51.843 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 208 shutdown - Shutting down ExecutorService 'catalogWatchTaskScheduler'
2020.12.20 20:20:51.844 CST   >> INFO  org.springframework.cloud.consul.serviceregistry.ConsulServiceRegistry 93 deregister - Deregistering service with consul: backoffice-service-192-168-2-102-7001
2020.12.20 20:20:51.851 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 208 shutdown - Shutting down ExecutorService 'applicationTaskExecutor'
2020.12.20 20:21:00.433 CST   >> INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker 330 postProcessAfterInitialization - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020.12.20 20:21:01.579 CST   >> INFO  org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration 102 initialize - Located property source: CompositePropertySource {name='consul', propertySources=[ConsulPropertySource {name='backoffice-service/'}, ConsulPropertySource {name='application/'}]}
2020.12.20 20:21:01.622 CST   >> INFO  org.springframework.boot.SpringApplication 651 logStartupProfileInfo - No active profile set, falling back to default profiles: default
2020.12.20 20:21:02.475 CST   >> WARN  org.springframework.boot.actuate.endpoint.EndpointId 155 logWarning - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020.12.20 20:21:02.639 CST   >> INFO  org.springframework.cloud.context.scope.GenericScope 295 setSerializationId - BeanFactory id=6c3a42ad-d9df-3011-bc59-da1d6761f3a1
2020.12.20 20:21:02.776 CST   >> INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker 330 postProcessAfterInitialization - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020.12.20 20:21:03.102 CST   >> INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer 92 initialize - Tomcat initialized with port(s): 7001 (http)
2020.12.20 20:21:03.120 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing ProtocolHandler ["http-nio-7001"]
2020.12.20 20:21:03.121 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting service [Tomcat]
2020.12.20 20:21:03.122 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting Servlet engine: [Apache Tomcat/9.0.29]
2020.12.20 20:21:03.281 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing Spring embedded WebApplicationContext
2020.12.20 20:21:03.281 CST   >> INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext 284 prepareWebApplicationContext - Root WebApplicationContext: initialization completed in 1643 ms
2020.12.20 20:21:03.391 CST   >> WARN  com.netflix.config.sources.URLConfigurationSource 121 <init> - No URLs will be polled as dynamic configuration sources.
2020.12.20 20:21:03.392 CST   >> INFO  com.netflix.config.sources.URLConfigurationSource 122 <init> - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020.12.20 20:21:03.407 CST   >> INFO  com.netflix.config.DynamicPropertyFactory 281 getInstance - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@1ad51a3
2020.12.20 20:21:04.161 CST   >> WARN  com.netflix.config.sources.URLConfigurationSource 121 <init> - No URLs will be polled as dynamic configuration sources.
2020.12.20 20:21:04.161 CST   >> INFO  com.netflix.config.sources.URLConfigurationSource 122 <init> - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020.12.20 20:21:04.320 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 171 initialize - Initializing ExecutorService 'applicationTaskExecutor'
2020.12.20 20:21:05.606 CST   >> WARN  org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger 106 logWarning - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020.12.20 20:21:05.631 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 171 initialize - Initializing ExecutorService 'catalogWatchTaskScheduler'
2020.12.20 20:21:05.642 CST   >> WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger 81 logWarning - Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020.12.20 20:21:05.683 CST   >> INFO  org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver 58 <init> - Exposing 2 endpoint(s) beneath base path '/actuator'
2020.12.20 20:22:52.346 CST   >> INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker 330 postProcessAfterInitialization - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020.12.20 20:22:53.897 CST   >> INFO  org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration 102 initialize - Located property source: CompositePropertySource {name='consul', propertySources=[ConsulPropertySource {name='backoffice-service/'}, ConsulPropertySource {name='application/'}]}
2020.12.20 20:22:53.952 CST   >> INFO  org.springframework.boot.SpringApplication 651 logStartupProfileInfo - No active profile set, falling back to default profiles: default
2020.12.20 20:22:55.098 CST   >> WARN  org.springframework.boot.actuate.endpoint.EndpointId 155 logWarning - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020.12.20 20:22:55.316 CST   >> INFO  org.springframework.cloud.context.scope.GenericScope 295 setSerializationId - BeanFactory id=c975b231-3742-3dd2-9a77-e2d4aebfddc3
2020.12.20 20:22:55.497 CST   >> INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker 330 postProcessAfterInitialization - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020.12.20 20:22:55.940 CST   >> INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer 92 initialize - Tomcat initialized with port(s): 7001 (http)
2020.12.20 20:22:55.968 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing ProtocolHandler ["http-nio-7001"]
2020.12.20 20:22:55.970 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting service [Tomcat]
2020.12.20 20:22:55.972 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting Servlet engine: [Apache Tomcat/9.0.29]
2020.12.20 20:22:56.182 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing Spring embedded WebApplicationContext
2020.12.20 20:22:56.182 CST   >> INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext 284 prepareWebApplicationContext - Root WebApplicationContext: initialization completed in 2211 ms
2020.12.20 20:22:56.311 CST   >> WARN  com.netflix.config.sources.URLConfigurationSource 121 <init> - No URLs will be polled as dynamic configuration sources.
2020.12.20 20:22:56.311 CST   >> INFO  com.netflix.config.sources.URLConfigurationSource 122 <init> - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020.12.20 20:22:56.329 CST   >> INFO  com.netflix.config.DynamicPropertyFactory 281 getInstance - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@5112b7
2020.12.20 20:22:57.275 CST   >> WARN  com.netflix.config.sources.URLConfigurationSource 121 <init> - No URLs will be polled as dynamic configuration sources.
2020.12.20 20:22:57.275 CST   >> INFO  com.netflix.config.sources.URLConfigurationSource 122 <init> - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020.12.20 20:22:57.453 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 171 initialize - Initializing ExecutorService 'applicationTaskExecutor'
2020.12.20 20:22:58.885 CST   >> WARN  org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger 106 logWarning - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020.12.20 20:22:58.911 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 171 initialize - Initializing ExecutorService 'catalogWatchTaskScheduler'
2020.12.20 20:22:58.924 CST   >> WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger 81 logWarning - Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020.12.20 20:22:58.968 CST   >> INFO  org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver 58 <init> - Exposing 2 endpoint(s) beneath base path '/actuator'
2020.12.20 20:22:59.111 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting ProtocolHandler ["http-nio-7001"]
2020.12.20 20:22:59.148 CST   >> INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer 204 start - Tomcat started on port(s): 7001 (http) with context path ''
2020.12.20 20:22:59.173 CST   >> INFO  org.springframework.cloud.consul.serviceregistry.ConsulServiceRegistry 65 register - Registering service with consul: NewService{id='backoffice-service-192-168-2-102-7001', name='backoffice-service', tags=[urlprefix-/backoffice-service, secure=false], address='192.168.2.102', meta=null, port=7001, enableTagOverride=null, check=Check{script='null', interval='1s', ttl='null', http='http://192.168.2.102:7001/health', method='null', header={}, tcp='null', timeout='null', deregisterCriticalServiceAfter='null', tlsSkipVerify=null, status='null'}, checks=null}
2020.12.20 20:22:59.687 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020.12.20 20:22:59.687 CST   >> INFO  org.springframework.web.servlet.FrameworkServlet 525 initServletBean - Initializing Servlet 'dispatcherServlet'
2020.12.20 20:22:59.695 CST   >> INFO  org.springframework.web.servlet.FrameworkServlet 547 initServletBean - Completed initialization in 8 ms
2020.12.20 20:22:59.735 CST   >> INFO  org.springframework.boot.StartupInfoLogger 61 logStarted - Started BackofficeRunner in 9.253 seconds (JVM running for 11.771)
2020.12.20 20:30:01.047 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 208 shutdown - Shutting down ExecutorService 'catalogWatchTaskScheduler'
2020.12.20 20:30:01.048 CST   >> INFO  org.springframework.cloud.consul.serviceregistry.ConsulServiceRegistry 93 deregister - Deregistering service with consul: backoffice-service-192-168-2-102-7001
2020.12.20 20:30:01.061 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 208 shutdown - Shutting down ExecutorService 'applicationTaskExecutor'
2020.12.20 20:30:12.240 CST   >> INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker 330 postProcessAfterInitialization - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020.12.20 20:30:13.763 CST   >> INFO  org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration 102 initialize - Located property source: CompositePropertySource {name='consul', propertySources=[ConsulPropertySource {name='backoffice-service/'}, ConsulPropertySource {name='application/'}]}
2020.12.20 20:30:13.837 CST   >> INFO  org.springframework.boot.SpringApplication 651 logStartupProfileInfo - No active profile set, falling back to default profiles: default
2020.12.20 20:30:14.923 CST   >> WARN  org.springframework.boot.actuate.endpoint.EndpointId 155 logWarning - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020.12.20 20:30:15.117 CST   >> INFO  org.springframework.cloud.context.scope.GenericScope 295 setSerializationId - BeanFactory id=c975b231-3742-3dd2-9a77-e2d4aebfddc3
2020.12.20 20:30:15.272 CST   >> INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker 330 postProcessAfterInitialization - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020.12.20 20:30:15.640 CST   >> INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer 92 initialize - Tomcat initialized with port(s): 7001 (http)
2020.12.20 20:30:15.662 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing ProtocolHandler ["http-nio-7001"]
2020.12.20 20:30:15.663 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting service [Tomcat]
2020.12.20 20:30:15.664 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting Servlet engine: [Apache Tomcat/9.0.29]
2020.12.20 20:30:15.847 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing Spring embedded WebApplicationContext
2020.12.20 20:30:15.847 CST   >> INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext 284 prepareWebApplicationContext - Root WebApplicationContext: initialization completed in 1990 ms
2020.12.20 20:30:15.985 CST   >> WARN  com.netflix.config.sources.URLConfigurationSource 121 <init> - No URLs will be polled as dynamic configuration sources.
2020.12.20 20:30:15.986 CST   >> INFO  com.netflix.config.sources.URLConfigurationSource 122 <init> - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020.12.20 20:30:16.003 CST   >> INFO  com.netflix.config.DynamicPropertyFactory 281 getInstance - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@cd562d
2020.12.20 20:30:17.001 CST   >> WARN  com.netflix.config.sources.URLConfigurationSource 121 <init> - No URLs will be polled as dynamic configuration sources.
2020.12.20 20:30:17.001 CST   >> INFO  com.netflix.config.sources.URLConfigurationSource 122 <init> - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020.12.20 20:30:17.155 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 171 initialize - Initializing ExecutorService 'applicationTaskExecutor'
2020.12.20 20:30:18.458 CST   >> WARN  org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger 106 logWarning - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020.12.20 20:30:18.486 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 171 initialize - Initializing ExecutorService 'catalogWatchTaskScheduler'
2020.12.20 20:30:18.499 CST   >> WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger 81 logWarning - Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020.12.20 20:30:18.545 CST   >> INFO  org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver 58 <init> - Exposing 2 endpoint(s) beneath base path '/actuator'
2020.12.20 20:30:18.687 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting ProtocolHandler ["http-nio-7001"]
2020.12.20 20:30:18.723 CST   >> INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer 204 start - Tomcat started on port(s): 7001 (http) with context path ''
2020.12.20 20:30:18.747 CST   >> INFO  org.springframework.cloud.consul.serviceregistry.ConsulServiceRegistry 65 register - Registering service with consul: NewService{id='backoffice-service-192-168-2-102-7001', name='backoffice-service', tags=[urlprefix-/backoffice-service, secure=false], address='192.168.2.102', meta=null, port=7001, enableTagOverride=null, check=Check{script='null', interval='1s', ttl='null', http='http://192.168.2.102:7001/health', method='null', header={}, tcp='null', timeout='null', deregisterCriticalServiceAfter='null', tlsSkipVerify=null, status='null'}, checks=null}
2020.12.20 20:30:19.265 CST   >> INFO  org.springframework.boot.StartupInfoLogger 61 logStarted - Started BackofficeRunner in 8.792 seconds (JVM running for 10.924)
2020.12.20 20:30:19.492 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020.12.20 20:30:19.493 CST   >> INFO  org.springframework.web.servlet.FrameworkServlet 525 initServletBean - Initializing Servlet 'dispatcherServlet'
2020.12.20 20:30:19.500 CST   >> INFO  org.springframework.web.servlet.FrameworkServlet 547 initServletBean - Completed initialization in 6 ms
2020.12.20 20:31:15.433 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 208 shutdown - Shutting down ExecutorService 'catalogWatchTaskScheduler'
2020.12.20 20:31:15.434 CST   >> INFO  org.springframework.cloud.consul.serviceregistry.ConsulServiceRegistry 93 deregister - Deregistering service with consul: backoffice-service-192-168-2-102-7001
2020.12.20 20:31:15.440 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 208 shutdown - Shutting down ExecutorService 'applicationTaskExecutor'
2020.12.20 20:31:23.158 CST   >> INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker 330 postProcessAfterInitialization - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020.12.20 20:31:24.276 CST   >> INFO  org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration 102 initialize - Located property source: CompositePropertySource {name='consul', propertySources=[ConsulPropertySource {name='backoffice-service/'}, ConsulPropertySource {name='application/'}]}
2020.12.20 20:31:24.320 CST   >> INFO  org.springframework.boot.SpringApplication 651 logStartupProfileInfo - No active profile set, falling back to default profiles: default
2020.12.20 20:31:25.150 CST   >> WARN  org.springframework.boot.actuate.endpoint.EndpointId 155 logWarning - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020.12.20 20:31:25.321 CST   >> INFO  org.springframework.cloud.context.scope.GenericScope 295 setSerializationId - BeanFactory id=c975b231-3742-3dd2-9a77-e2d4aebfddc3
2020.12.20 20:31:25.453 CST   >> INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker 330 postProcessAfterInitialization - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020.12.20 20:31:25.772 CST   >> INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer 92 initialize - Tomcat initialized with port(s): 7001 (http)
2020.12.20 20:31:25.793 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing ProtocolHandler ["http-nio-7001"]
2020.12.20 20:31:25.794 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting service [Tomcat]
2020.12.20 20:31:25.794 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting Servlet engine: [Apache Tomcat/9.0.29]
2020.12.20 20:31:25.960 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing Spring embedded WebApplicationContext
2020.12.20 20:31:25.960 CST   >> INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext 284 prepareWebApplicationContext - Root WebApplicationContext: initialization completed in 1624 ms
2020.12.20 20:31:26.052 CST   >> WARN  com.netflix.config.sources.URLConfigurationSource 121 <init> - No URLs will be polled as dynamic configuration sources.
2020.12.20 20:31:26.053 CST   >> INFO  com.netflix.config.sources.URLConfigurationSource 122 <init> - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020.12.20 20:31:26.081 CST   >> INFO  com.netflix.config.DynamicPropertyFactory 281 getInstance - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@16aa471
2020.12.20 20:31:26.830 CST   >> WARN  com.netflix.config.sources.URLConfigurationSource 121 <init> - No URLs will be polled as dynamic configuration sources.
2020.12.20 20:31:26.830 CST   >> INFO  com.netflix.config.sources.URLConfigurationSource 122 <init> - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020.12.20 20:31:26.982 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 171 initialize - Initializing ExecutorService 'applicationTaskExecutor'
2020.12.20 20:31:28.191 CST   >> WARN  org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger 106 logWarning - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020.12.20 20:31:28.216 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 171 initialize - Initializing ExecutorService 'catalogWatchTaskScheduler'
2020.12.20 20:31:28.228 CST   >> WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger 81 logWarning - Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020.12.20 20:31:28.252 CST   >> INFO  org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver 58 <init> - Exposing 2 endpoint(s) beneath base path '/actuator'
2020.12.20 20:31:28.391 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting ProtocolHandler ["http-nio-7001"]
2020.12.20 20:31:28.423 CST   >> INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer 204 start - Tomcat started on port(s): 7001 (http) with context path ''
2020.12.20 20:31:28.463 CST   >> INFO  org.springframework.cloud.consul.serviceregistry.ConsulServiceRegistry 65 register - Registering service with consul: NewService{id='backoffice-service-192-168-2-102-7001', name='backoffice-service', tags=[urlprefix-/backoffice-service, secure=false], address='192.168.2.102', meta=null, port=7001, enableTagOverride=null, check=Check{script='null', interval='1s', ttl='null', http='http://192.168.2.102:7001/health', method='null', header={}, tcp='null', timeout='null', deregisterCriticalServiceAfter='null', tlsSkipVerify=null, status='null'}, checks=null}
2020.12.20 20:31:28.962 CST   >> INFO  org.springframework.boot.StartupInfoLogger 61 logStarted - Started BackofficeRunner in 7.344 seconds (JVM running for 9.268)
2020.12.20 20:31:29.321 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020.12.20 20:31:29.321 CST   >> INFO  org.springframework.web.servlet.FrameworkServlet 525 initServletBean - Initializing Servlet 'dispatcherServlet'
2020.12.20 20:31:29.329 CST   >> INFO  org.springframework.web.servlet.FrameworkServlet 547 initServletBean - Completed initialization in 8 ms
2020.12.20 20:51:35.151 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 208 shutdown - Shutting down ExecutorService 'catalogWatchTaskScheduler'
2020.12.20 20:51:35.153 CST   >> INFO  org.springframework.cloud.consul.serviceregistry.ConsulServiceRegistry 93 deregister - Deregistering service with consul: backoffice-service-192-168-2-102-7001
2020.12.20 20:51:35.181 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 208 shutdown - Shutting down ExecutorService 'applicationTaskExecutor'
2020.12.20 22:10:44.192 CST   >> INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker 330 postProcessAfterInitialization - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020.12.20 22:12:02.016 CST   >> INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker 330 postProcessAfterInitialization - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020.12.20 22:15:32.499 CST   >> INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker 330 postProcessAfterInitialization - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020.12.20 22:16:32.589 CST   >> INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker 330 postProcessAfterInitialization - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020.12.20 22:17:07.012 CST   >> INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker 330 postProcessAfterInitialization - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020.12.20 22:17:08.149 CST   >> INFO  org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration 102 initialize - Located property source: CompositePropertySource {name='consul', propertySources=[ConsulPropertySource {name='backoffice-service/'}, ConsulPropertySource {name='application/'}]}
2020.12.20 22:17:08.217 CST   >> INFO  org.springframework.boot.SpringApplication 651 logStartupProfileInfo - No active profile set, falling back to default profiles: default
2020.12.20 22:17:09.143 CST   >> WARN  org.springframework.boot.actuate.endpoint.EndpointId 155 logWarning - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020.12.20 22:17:09.319 CST   >> INFO  org.springframework.cloud.context.scope.GenericScope 295 setSerializationId - BeanFactory id=c975b231-3742-3dd2-9a77-e2d4aebfddc3
2020.12.20 22:17:09.448 CST   >> INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker 330 postProcessAfterInitialization - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020.12.20 22:17:09.741 CST   >> INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer 92 initialize - Tomcat initialized with port(s): 7001 (http)
2020.12.20 22:17:09.763 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing ProtocolHandler ["http-nio-7001"]
2020.12.20 22:17:09.763 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting service [Tomcat]
2020.12.20 22:17:09.764 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting Servlet engine: [Apache Tomcat/9.0.29]
2020.12.20 22:17:09.939 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing Spring embedded WebApplicationContext
2020.12.20 22:17:09.939 CST   >> INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext 284 prepareWebApplicationContext - Root WebApplicationContext: initialization completed in 1707 ms
2020.12.20 22:17:10.078 CST   >> WARN  com.netflix.config.sources.URLConfigurationSource 121 <init> - No URLs will be polled as dynamic configuration sources.
2020.12.20 22:17:10.079 CST   >> INFO  com.netflix.config.sources.URLConfigurationSource 122 <init> - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020.12.20 22:17:10.097 CST   >> INFO  com.netflix.config.DynamicPropertyFactory 281 getInstance - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@d40c77
2020.12.20 22:17:10.852 CST   >> WARN  org.springframework.context.support.AbstractApplicationContext 558 refresh - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'demoController': Injection of autowired dependencies failed; nested exception is java.lang.IllegalArgumentException: Could not resolve placeholder 'backoffice.service' in value "${backoffice.service}"
2020.12.20 22:17:10.869 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Stopping service [Tomcat]
2020.12.20 22:17:10.885 CST   >> INFO  org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener 136 logMessage - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020.12.20 22:17:32.806 CST   >> INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker 330 postProcessAfterInitialization - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020.12.20 22:17:33.815 CST   >> INFO  org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration 102 initialize - Located property source: CompositePropertySource {name='consul', propertySources=[ConsulPropertySource {name='config/backoffice-service/'}, ConsulPropertySource {name='config/application/'}]}
2020.12.20 22:17:33.876 CST   >> INFO  org.springframework.boot.SpringApplication 651 logStartupProfileInfo - No active profile set, falling back to default profiles: default
2020.12.20 22:17:34.680 CST   >> WARN  org.springframework.boot.actuate.endpoint.EndpointId 155 logWarning - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020.12.20 22:17:34.827 CST   >> INFO  org.springframework.cloud.context.scope.GenericScope 295 setSerializationId - BeanFactory id=c975b231-3742-3dd2-9a77-e2d4aebfddc3
2020.12.20 22:17:34.952 CST   >> INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker 330 postProcessAfterInitialization - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020.12.20 22:17:35.200 CST   >> INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer 92 initialize - Tomcat initialized with port(s): 7001 (http)
2020.12.20 22:17:35.219 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing ProtocolHandler ["http-nio-7001"]
2020.12.20 22:17:35.220 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting service [Tomcat]
2020.12.20 22:17:35.221 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting Servlet engine: [Apache Tomcat/9.0.29]
2020.12.20 22:17:35.376 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing Spring embedded WebApplicationContext
2020.12.20 22:17:35.376 CST   >> INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext 284 prepareWebApplicationContext - Root WebApplicationContext: initialization completed in 1486 ms
2020.12.20 22:17:35.491 CST   >> WARN  com.netflix.config.sources.URLConfigurationSource 121 <init> - No URLs will be polled as dynamic configuration sources.
2020.12.20 22:17:35.492 CST   >> INFO  com.netflix.config.sources.URLConfigurationSource 122 <init> - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020.12.20 22:17:35.510 CST   >> INFO  com.netflix.config.DynamicPropertyFactory 281 getInstance - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@6bba7d
2020.12.20 22:17:36.219 CST   >> WARN  org.springframework.context.support.AbstractApplicationContext 558 refresh - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'demoController': Injection of autowired dependencies failed; nested exception is java.lang.IllegalArgumentException: Could not resolve placeholder 'backoffice.service' in value "${backoffice.service}"
2020.12.20 22:17:36.224 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Stopping service [Tomcat]
2020.12.20 22:17:36.257 CST   >> INFO  org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener 136 logMessage - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020.12.20 22:20:39.884 CST   >> INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker 330 postProcessAfterInitialization - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020.12.20 22:20:40.951 CST   >> INFO  org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration 102 initialize - Located property source: CompositePropertySource {name='consul', propertySources=[ConsulPropertySource {name='config/backoffice-service/'}, ConsulPropertySource {name='config/application/'}]}
2020.12.20 22:20:41.012 CST   >> INFO  org.springframework.boot.SpringApplication 651 logStartupProfileInfo - No active profile set, falling back to default profiles: default
2020.12.20 22:20:41.904 CST   >> WARN  org.springframework.boot.actuate.endpoint.EndpointId 155 logWarning - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020.12.20 22:20:42.081 CST   >> INFO  org.springframework.cloud.context.scope.GenericScope 295 setSerializationId - BeanFactory id=c975b231-3742-3dd2-9a77-e2d4aebfddc3
2020.12.20 22:20:42.235 CST   >> INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker 330 postProcessAfterInitialization - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020.12.20 22:20:42.502 CST   >> INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer 92 initialize - Tomcat initialized with port(s): 7001 (http)
2020.12.20 22:20:42.526 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing ProtocolHandler ["http-nio-7001"]
2020.12.20 22:20:42.527 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting service [Tomcat]
2020.12.20 22:20:42.528 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting Servlet engine: [Apache Tomcat/9.0.29]
2020.12.20 22:20:42.699 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing Spring embedded WebApplicationContext
2020.12.20 22:20:42.699 CST   >> INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext 284 prepareWebApplicationContext - Root WebApplicationContext: initialization completed in 1669 ms
2020.12.20 22:20:42.830 CST   >> WARN  com.netflix.config.sources.URLConfigurationSource 121 <init> - No URLs will be polled as dynamic configuration sources.
2020.12.20 22:20:42.831 CST   >> INFO  com.netflix.config.sources.URLConfigurationSource 122 <init> - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020.12.20 22:20:42.848 CST   >> INFO  com.netflix.config.DynamicPropertyFactory 281 getInstance - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@1f7a906
2020.12.20 22:20:43.607 CST   >> WARN  org.springframework.context.support.AbstractApplicationContext 558 refresh - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'demoController': Injection of autowired dependencies failed; nested exception is java.lang.IllegalArgumentException: Could not resolve placeholder 'backoffice.service' in value "${backoffice.service}"
2020.12.20 22:20:43.614 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Stopping service [Tomcat]
2020.12.20 22:20:43.657 CST   >> INFO  org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener 136 logMessage - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020.12.20 22:36:29.058 CST   >> INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker 330 postProcessAfterInitialization - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020.12.20 22:36:30.145 CST   >> INFO  org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration 102 initialize - Located property source: CompositePropertySource {name='consul', propertySources=[ConsulPropertySource {name='config/backoffice-service/'}, ConsulPropertySource {name='config/application/'}]}
2020.12.20 22:36:30.201 CST   >> INFO  org.springframework.boot.SpringApplication 651 logStartupProfileInfo - No active profile set, falling back to default profiles: default
2020.12.20 22:36:31.081 CST   >> WARN  org.springframework.boot.actuate.endpoint.EndpointId 155 logWarning - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020.12.20 22:36:31.282 CST   >> INFO  org.springframework.cloud.context.scope.GenericScope 295 setSerializationId - BeanFactory id=c975b231-3742-3dd2-9a77-e2d4aebfddc3
2020.12.20 22:36:31.421 CST   >> INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker 330 postProcessAfterInitialization - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020.12.20 22:36:31.723 CST   >> INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer 92 initialize - Tomcat initialized with port(s): 7001 (http)
2020.12.20 22:36:31.759 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing ProtocolHandler ["http-nio-7001"]
2020.12.20 22:36:31.760 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting service [Tomcat]
2020.12.20 22:36:31.761 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting Servlet engine: [Apache Tomcat/9.0.29]
2020.12.20 22:36:31.921 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing Spring embedded WebApplicationContext
2020.12.20 22:36:31.921 CST   >> INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext 284 prepareWebApplicationContext - Root WebApplicationContext: initialization completed in 1706 ms
2020.12.20 22:36:32.039 CST   >> WARN  com.netflix.config.sources.URLConfigurationSource 121 <init> - No URLs will be polled as dynamic configuration sources.
2020.12.20 22:36:32.040 CST   >> INFO  com.netflix.config.sources.URLConfigurationSource 122 <init> - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020.12.20 22:36:32.056 CST   >> INFO  com.netflix.config.DynamicPropertyFactory 281 getInstance - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@24592e
2020.12.20 22:36:32.851 CST   >> WARN  com.netflix.config.sources.URLConfigurationSource 121 <init> - No URLs will be polled as dynamic configuration sources.
2020.12.20 22:36:32.851 CST   >> INFO  com.netflix.config.sources.URLConfigurationSource 122 <init> - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020.12.20 22:36:33.002 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 171 initialize - Initializing ExecutorService 'applicationTaskExecutor'
2020.12.20 22:36:34.596 CST   >> WARN  org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger 106 logWarning - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020.12.20 22:36:34.649 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 171 initialize - Initializing ExecutorService 'catalogWatchTaskScheduler'
2020.12.20 22:36:34.663 CST   >> WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger 81 logWarning - Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020.12.20 22:36:34.688 CST   >> INFO  org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver 58 <init> - Exposing 2 endpoint(s) beneath base path '/actuator'
2020.12.20 22:36:34.832 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting ProtocolHandler ["http-nio-7001"]
2020.12.20 22:36:34.867 CST   >> INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer 204 start - Tomcat started on port(s): 7001 (http) with context path ''
2020.12.20 22:36:34.889 CST   >> INFO  org.springframework.cloud.consul.serviceregistry.ConsulServiceRegistry 65 register - Registering service with consul: NewService{id='backoffice-service-192-168-0-103-7001', name='backoffice-service', tags=[urlprefix-/backoffice-service, secure=false], address='192.168.0.103', meta=null, port=7001, enableTagOverride=null, check=Check{script='null', interval='1s', ttl='null', http='http://192.168.0.103:7001/health', method='null', header={}, tcp='null', timeout='null', deregisterCriticalServiceAfter='null', tlsSkipVerify=null, status='null'}, checks=null}
2020.12.20 22:36:35.381 CST   >> INFO  org.springframework.boot.StartupInfoLogger 61 logStarted - Started BackofficeRunner in 7.886 seconds (JVM running for 9.883)
2020.12.20 22:36:35.486 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020.12.20 22:36:35.486 CST   >> INFO  org.springframework.web.servlet.FrameworkServlet 525 initServletBean - Initializing Servlet 'dispatcherServlet'
2020.12.20 22:36:35.494 CST   >> INFO  org.springframework.web.servlet.FrameworkServlet 547 initServletBean - Completed initialization in 8 ms
2020.12.21 07:48:17.009 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 208 shutdown - Shutting down ExecutorService 'catalogWatchTaskScheduler'
2020.12.21 07:48:17.010 CST   >> INFO  org.springframework.cloud.consul.serviceregistry.ConsulServiceRegistry 93 deregister - Deregistering service with consul: backoffice-service-192-168-0-103-7001
2020.12.21 07:48:17.021 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 208 shutdown - Shutting down ExecutorService 'applicationTaskExecutor'
2020.12.21 21:36:24.142 CST   >> INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker 330 postProcessAfterInitialization - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020.12.21 21:36:25.260 CST   >> INFO  org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration 102 initialize - Located property source: CompositePropertySource {name='consul', propertySources=[ConsulPropertySource {name='config/contract-service/'}, ConsulPropertySource {name='config/application/'}]}
2020.12.21 21:36:25.293 CST   >> INFO  org.springframework.boot.SpringApplication 651 logStartupProfileInfo - No active profile set, falling back to default profiles: default
2020.12.21 21:36:26.292 CST   >> WARN  org.springframework.boot.actuate.endpoint.EndpointId 155 logWarning - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020.12.21 21:36:26.477 CST   >> INFO  org.springframework.cloud.context.scope.GenericScope 295 setSerializationId - BeanFactory id=8d67b327-d6bb-3571-9e70-5cb8b0729e7d
2020.12.21 21:36:26.610 CST   >> INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker 330 postProcessAfterInitialization - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020.12.21 21:36:26.885 CST   >> INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer 92 initialize - Tomcat initialized with port(s): 7002 (http)
2020.12.21 21:36:26.910 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing ProtocolHandler ["http-nio-7002"]
2020.12.21 21:36:26.911 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting service [Tomcat]
2020.12.21 21:36:26.911 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting Servlet engine: [Apache Tomcat/9.0.29]
2020.12.21 21:36:27.073 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing Spring embedded WebApplicationContext
2020.12.21 21:36:27.073 CST   >> INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext 284 prepareWebApplicationContext - Root WebApplicationContext: initialization completed in 1741 ms
2020.12.21 21:36:27.206 CST   >> WARN  com.netflix.config.sources.URLConfigurationSource 121 <init> - No URLs will be polled as dynamic configuration sources.
2020.12.21 21:36:27.207 CST   >> INFO  com.netflix.config.sources.URLConfigurationSource 122 <init> - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020.12.21 21:36:27.223 CST   >> INFO  com.netflix.config.DynamicPropertyFactory 281 getInstance - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@882a93
2020.12.21 21:36:27.999 CST   >> WARN  com.netflix.config.sources.URLConfigurationSource 121 <init> - No URLs will be polled as dynamic configuration sources.
2020.12.21 21:36:27.999 CST   >> INFO  com.netflix.config.sources.URLConfigurationSource 122 <init> - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020.12.21 21:36:28.166 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 171 initialize - Initializing ExecutorService 'applicationTaskExecutor'
2020.12.21 21:36:29.412 CST   >> WARN  org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger 106 logWarning - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020.12.21 21:36:29.439 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 171 initialize - Initializing ExecutorService 'catalogWatchTaskScheduler'
2020.12.21 21:36:29.452 CST   >> WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger 81 logWarning - Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020.12.21 21:36:29.477 CST   >> INFO  org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver 58 <init> - Exposing 2 endpoint(s) beneath base path '/actuator'
2020.12.21 21:36:29.630 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting ProtocolHandler ["http-nio-7002"]
2020.12.21 21:36:29.665 CST   >> INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer 204 start - Tomcat started on port(s): 7002 (http) with context path ''
2020.12.21 21:36:29.687 CST   >> INFO  org.springframework.cloud.consul.serviceregistry.ConsulServiceRegistry 65 register - Registering service with consul: NewService{id='contract-service-192-168-2-105-7002', name='contract-service', tags=[urlprefix-/contract-service, secure=false], address='192.168.2.105', meta=null, port=7002, enableTagOverride=null, check=Check{script='null', interval='1s', ttl='null', http='http://192.168.2.105:7002/health', method='null', header={}, tcp='null', timeout='null', deregisterCriticalServiceAfter='null', tlsSkipVerify=null, status='null'}, checks=null}
2020.12.21 21:36:30.171 CST   >> INFO  org.springframework.boot.StartupInfoLogger 61 logStarted - Started ContractRunner in 7.654 seconds (JVM running for 9.626)
2020.12.21 21:36:30.448 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020.12.21 21:36:30.448 CST   >> INFO  org.springframework.web.servlet.FrameworkServlet 525 initServletBean - Initializing Servlet 'dispatcherServlet'
2020.12.21 21:36:30.499 CST   >> INFO  org.springframework.web.servlet.FrameworkServlet 547 initServletBean - Completed initialization in 50 ms
2020.12.21 21:54:49.950 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 208 shutdown - Shutting down ExecutorService 'catalogWatchTaskScheduler'
2020.12.21 21:54:49.950 CST   >> INFO  org.springframework.cloud.consul.serviceregistry.ConsulServiceRegistry 93 deregister - Deregistering service with consul: contract-service-192-168-2-105-7002
2020.12.21 21:54:49.964 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 208 shutdown - Shutting down ExecutorService 'applicationTaskExecutor'
rtySourceBootstrapConfiguration 102 initialize - Located property source: CompositePropertySource {name='consul', propertySources=[ConsulPropertySource {name='config/backoffice-service/'}, ConsulPropertySource {name='config/application/'}]}
2020.12.21 21:54:24.485 CST   >> INFO  org.springframework.boot.SpringApplication 651 logStartupProfileInfo - No active profile set, falling back to default profiles: default
2020.12.21 21:54:25.452 CST   >> WARN  org.springframework.boot.actuate.endpoint.EndpointId 155 logWarning - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020.12.21 21:54:25.613 CST   >> INFO  org.springframework.cloud.context.scope.GenericScope 295 setSerializationId - BeanFactory id=08927f01-c1d1-3322-8ab7-dc48ab2b68ee
2020.12.21 21:54:25.735 CST   >> INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker 330 postProcessAfterInitialization - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020.12.21 21:54:26.060 CST   >> INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer 92 initialize - Tomcat initialized with port(s): 7001 (http)
2020.12.21 21:54:26.081 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing ProtocolHandler ["http-nio-7001"]
2020.12.21 21:54:26.082 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting service [Tomcat]
2020.12.21 21:54:26.083 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting Servlet engine: [Apache Tomcat/9.0.29]
2020.12.21 21:54:26.239 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing Spring embedded WebApplicationContext
2020.12.21 21:54:26.239 CST   >> INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext 284 prepareWebApplicationContext - Root WebApplicationContext: initialization completed in 1738 ms
2020.12.21 21:54:26.328 CST   >> WARN  com.netflix.config.sources.URLConfigurationSource 121 <init> - No URLs will be polled as dynamic configuration sources.
2020.12.21 21:54:26.329 CST   >> INFO  com.netflix.config.sources.URLConfigurationSource 122 <init> - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020.12.21 21:54:26.344 CST   >> INFO  com.netflix.config.DynamicPropertyFactory 281 getInstance - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@1711b7
2020.12.21 21:54:27.097 CST   >> WARN  com.netflix.config.sources.URLConfigurationSource 121 <init> - No URLs will be polled as dynamic configuration sources.
2020.12.21 21:54:27.097 CST   >> INFO  com.netflix.config.sources.URLConfigurationSource 122 <init> - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020.12.21 21:54:27.235 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 171 initialize - Initializing ExecutorService 'applicationTaskExecutor'
2020.12.21 21:54:28.425 CST   >> WARN  org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger 106 logWarning - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020.12.21 21:54:28.448 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 171 initialize - Initializing ExecutorService 'catalogWatchTaskScheduler'
2020.12.21 21:54:28.459 CST   >> WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger 81 logWarning - Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020.12.21 21:54:28.481 CST   >> INFO  org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver 58 <init> - Exposing 2 endpoint(s) beneath base path '/actuator'
2020.12.21 21:54:28.612 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting ProtocolHandler ["http-nio-7001"]
2020.12.21 21:54:28.639 CST   >> INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer 204 start - Tomcat started on port(s): 7001 (http) with context path ''
2020.12.21 21:54:28.658 CST   >> INFO  org.springframework.cloud.consul.serviceregistry.ConsulServiceRegistry 65 register - Registering service with consul: NewService{id='backoffice-service-192-168-2-105-7001', name='backoffice-service', tags=[urlprefix-/backoffice-service, secure=false], address='192.168.2.105', meta=null, port=7001, enableTagOverride=null, check=Check{script='null', interval='1s', ttl='null', http='http://192.168.2.105:7001/health', method='null', header={}, tcp='null', timeout='null', deregisterCriticalServiceAfter='null', tlsSkipVerify=null, status='null'}, checks=null}
2020.12.21 21:54:29.099 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020.12.21 21:54:29.099 CST   >> INFO  org.springframework.web.servlet.FrameworkServlet 525 initServletBean - Initializing Servlet 'dispatcherServlet'
2020.12.21 21:54:29.105 CST   >> INFO  org.springframework.web.servlet.FrameworkServlet 547 initServletBean - Completed initialization in 6 ms
2020.12.21 21:54:29.160 CST   >> INFO  org.springframework.boot.StartupInfoLogger 61 logStarted - Started BackofficeServiceRunner in 7.461 seconds (JVM running for 9.868)
2020.12.21 21:55:05.523 CST   >> INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker 330 postProcessAfterInitialization - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020.12.21 21:55:06.545 CST   >> INFO  org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration 102 initialize - Located property source: CompositePropertySource {name='consul', propertySources=[ConsulPropertySource {name='config/contract-service/'}, ConsulPropertySource {name='config/application/'}]}
2020.12.21 21:55:06.578 CST   >> INFO  org.springframework.boot.SpringApplication 651 logStartupProfileInfo - No active profile set, falling back to default profiles: default
2020.12.21 21:55:07.341 CST   >> WARN  org.springframework.boot.actuate.endpoint.EndpointId 155 logWarning - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020.12.21 21:55:07.493 CST   >> INFO  org.springframework.cloud.context.scope.GenericScope 295 setSerializationId - BeanFactory id=c027dde2-db38-3c72-8efd-4ba8c977cf6f
2020.12.21 21:55:07.619 CST   >> INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker 330 postProcessAfterInitialization - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020.12.21 21:55:07.927 CST   >> INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer 92 initialize - Tomcat initialized with port(s): 7002 (http)
2020.12.21 21:55:07.950 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing ProtocolHandler ["http-nio-7002"]
2020.12.21 21:55:07.950 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting service [Tomcat]
2020.12.21 21:55:07.951 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting Servlet engine: [Apache Tomcat/9.0.29]
2020.12.21 21:55:08.122 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing Spring embedded WebApplicationContext
2020.12.21 21:55:08.123 CST   >> INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext 284 prepareWebApplicationContext - Root WebApplicationContext: initialization completed in 1533 ms
2020.12.21 21:55:08.219 CST   >> WARN  com.netflix.config.sources.URLConfigurationSource 121 <init> - No URLs will be polled as dynamic configuration sources.
2020.12.21 21:55:08.219 CST   >> INFO  com.netflix.config.sources.URLConfigurationSource 122 <init> - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020.12.21 21:55:08.240 CST   >> INFO  com.netflix.config.DynamicPropertyFactory 281 getInstance - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@37f3c1
2020.12.21 21:55:09.161 CST   >> WARN  com.netflix.config.sources.URLConfigurationSource 121 <init> - No URLs will be polled as dynamic configuration sources.
2020.12.21 21:55:09.162 CST   >> INFO  com.netflix.config.sources.URLConfigurationSource 122 <init> - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020.12.21 21:55:09.391 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 171 initialize - Initializing ExecutorService 'applicationTaskExecutor'
2020.12.21 21:55:10.770 CST   >> WARN  org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger 106 logWarning - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020.12.21 21:55:10.797 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 171 initialize - Initializing ExecutorService 'catalogWatchTaskScheduler'
2020.12.21 21:55:10.809 CST   >> WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger 81 logWarning - Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020.12.21 21:55:10.835 CST   >> INFO  org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver 58 <init> - Exposing 2 endpoint(s) beneath base path '/actuator'
2020.12.21 21:55:10.998 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting ProtocolHandler ["http-nio-7002"]
2020.12.21 21:55:11.034 CST   >> INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer 204 start - Tomcat started on port(s): 7002 (http) with context path ''
2020.12.21 21:55:11.055 CST   >> INFO  org.springframework.cloud.consul.serviceregistry.ConsulServiceRegistry 65 register - Registering service with consul: NewService{id='contract-service-192-168-2-105-7002', name='contract-service', tags=[urlprefix-/contract-service, secure=false], address='192.168.2.105', meta=null, port=7002, enableTagOverride=null, check=Check{script='null', interval='1s', ttl='null', http='http://192.168.2.105:7002/health', method='null', header={}, tcp='null', timeout='null', deregisterCriticalServiceAfter='null', tlsSkipVerify=null, status='null'}, checks=null}
2020.12.21 21:55:11.233 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020.12.21 21:55:11.233 CST   >> INFO  org.springframework.web.servlet.FrameworkServlet 525 initServletBean - Initializing Servlet 'dispatcherServlet'
2020.12.21 21:55:11.241 CST   >> INFO  org.springframework.web.servlet.FrameworkServlet 547 initServletBean - Completed initialization in 8 ms
2020.12.21 21:55:11.582 CST   >> INFO  org.springframework.boot.StartupInfoLogger 61 logStarted - Started ContractServiceRunner in 7.431 seconds (JVM running for 9.441)
2020.12.21 21:59:11.822 CST   >> INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker 330 postProcessAfterInitialization - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020.12.21 21:59:12.903 CST   >> INFO  org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration 102 initialize - Located property source: CompositePropertySource {name='consul', propertySources=[ConsulPropertySource {name='config/backoffice-service/'}, ConsulPropertySource {name='config/application/'}]}
2020.12.21 21:59:12.946 CST   >> INFO  org.springframework.boot.SpringApplication 651 logStartupProfileInfo - No active profile set, falling back to default profiles: default
2020.12.21 21:59:13.714 CST   >> WARN  org.springframework.boot.actuate.endpoint.EndpointId 155 logWarning - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020.12.21 21:59:13.868 CST   >> INFO  org.springframework.cloud.context.scope.GenericScope 295 setSerializationId - BeanFactory id=e7dbadab-d96d-321c-82a7-36a1ce8c5c8f
2020.12.21 21:59:13.987 CST   >> INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker 330 postProcessAfterInitialization - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020.12.21 21:59:14.368 CST   >> INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer 92 initialize - Tomcat initialized with port(s): 7004 (http)
2020.12.21 21:59:14.391 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing ProtocolHandler ["http-nio-7004"]
2020.12.21 21:59:14.392 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting service [Tomcat]
2020.12.21 21:59:14.393 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting Servlet engine: [Apache Tomcat/9.0.29]
2020.12.21 21:59:14.551 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing Spring embedded WebApplicationContext
2020.12.21 21:59:14.551 CST   >> INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext 284 prepareWebApplicationContext - Root WebApplicationContext: initialization completed in 1590 ms
2020.12.21 21:59:14.679 CST   >> WARN  com.netflix.config.sources.URLConfigurationSource 121 <init> - No URLs will be polled as dynamic configuration sources.
2020.12.21 21:59:14.680 CST   >> INFO  com.netflix.config.sources.URLConfigurationSource 122 <init> - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020.12.21 21:59:14.703 CST   >> INFO  com.netflix.config.DynamicPropertyFactory 281 getInstance - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@1db774f
2020.12.21 21:59:15.594 CST   >> WARN  com.netflix.config.sources.URLConfigurationSource 121 <init> - No URLs will be polled as dynamic configuration sources.
2020.12.21 21:59:15.594 CST   >> INFO  com.netflix.config.sources.URLConfigurationSource 122 <init> - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020.12.21 21:59:15.802 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 171 initialize - Initializing ExecutorService 'applicationTaskExecutor'
2020.12.21 21:59:17.028 CST   >> WARN  org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger 106 logWarning - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020.12.21 21:59:17.051 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 171 initialize - Initializing ExecutorService 'catalogWatchTaskScheduler'
2020.12.21 21:59:17.062 CST   >> WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger 81 logWarning - Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020.12.21 21:59:17.084 CST   >> INFO  org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver 58 <init> - Exposing 2 endpoint(s) beneath base path '/actuator'
2020.12.21 21:59:17.215 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting ProtocolHandler ["http-nio-7004"]
2020.12.21 21:59:17.243 CST   >> INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer 204 start - Tomcat started on port(s): 7004 (http) with context path ''
2020.12.21 21:59:17.261 CST   >> INFO  org.springframework.cloud.consul.serviceregistry.ConsulServiceRegistry 65 register - Registering service with consul: NewService{id='backoffice-service-192-168-2-105-7004', name='backoffice-service', tags=[urlprefix-/backoffice-service, secure=false], address='192.168.2.105', meta=null, port=7004, enableTagOverride=null, check=Check{script='null', interval='1s', ttl='null', http='http://192.168.2.105:7004/health', method='null', header={}, tcp='null', timeout='null', deregisterCriticalServiceAfter='null', tlsSkipVerify=null, status='null'}, checks=null}
2020.12.21 21:59:17.874 CST   >> INFO  org.springframework.boot.StartupInfoLogger 61 logStarted - Started MerchantServiceRunner in 7.552 seconds (JVM running for 9.891)
2020.12.21 21:59:18.130 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020.12.21 21:59:18.130 CST   >> INFO  org.springframework.web.servlet.FrameworkServlet 525 initServletBean - Initializing Servlet 'dispatcherServlet'
2020.12.21 21:59:18.141 CST   >> INFO  org.springframework.web.servlet.FrameworkServlet 547 initServletBean - Completed initialization in 11 ms
2020.12.21 22:03:19.829 CST   >> INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker 330 postProcessAfterInitialization - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020.12.21 22:03:21.190 CST   >> INFO  org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration 102 initialize - Located property source: CompositePropertySource {name='consul', propertySources=[ConsulPropertySource {name='config/merchant-service/'}, ConsulPropertySource {name='config/application/'}]}
2020.12.21 22:03:21.233 CST   >> INFO  org.springframework.boot.SpringApplication 651 logStartupProfileInfo - No active profile set, falling back to default profiles: default
2020.12.21 22:03:22.170 CST   >> WARN  org.springframework.boot.actuate.endpoint.EndpointId 155 logWarning - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020.12.21 22:03:22.386 CST   >> INFO  org.springframework.cloud.context.scope.GenericScope 295 setSerializationId - BeanFactory id=e7dbadab-d96d-321c-82a7-36a1ce8c5c8f
2020.12.21 22:03:22.559 CST   >> INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker 330 postProcessAfterInitialization - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020.12.21 22:03:22.928 CST   >> INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer 92 initialize - Tomcat initialized with port(s): 7004 (http)
2020.12.21 22:03:22.951 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing ProtocolHandler ["http-nio-7004"]
2020.12.21 22:03:22.952 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting service [Tomcat]
2020.12.21 22:03:22.952 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting Servlet engine: [Apache Tomcat/9.0.29]
2020.12.21 22:03:23.128 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing Spring embedded WebApplicationContext
2020.12.21 22:03:23.129 CST   >> INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext 284 prepareWebApplicationContext - Root WebApplicationContext: initialization completed in 1879 ms
2020.12.21 22:03:23.251 CST   >> WARN  com.netflix.config.sources.URLConfigurationSource 121 <init> - No URLs will be polled as dynamic configuration sources.
2020.12.21 22:03:23.252 CST   >> INFO  com.netflix.config.sources.URLConfigurationSource 122 <init> - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020.12.21 22:03:23.272 CST   >> INFO  com.netflix.config.DynamicPropertyFactory 281 getInstance - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@95d401
2020.12.21 22:03:24.137 CST   >> WARN  com.netflix.config.sources.URLConfigurationSource 121 <init> - No URLs will be polled as dynamic configuration sources.
2020.12.21 22:03:24.138 CST   >> INFO  com.netflix.config.sources.URLConfigurationSource 122 <init> - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020.12.21 22:03:24.325 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 171 initialize - Initializing ExecutorService 'applicationTaskExecutor'
2020.12.21 22:03:25.667 CST   >> WARN  org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger 106 logWarning - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020.12.21 22:03:25.696 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 171 initialize - Initializing ExecutorService 'catalogWatchTaskScheduler'
2020.12.21 22:03:25.710 CST   >> WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger 81 logWarning - Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020.12.21 22:03:25.737 CST   >> INFO  org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver 58 <init> - Exposing 2 endpoint(s) beneath base path '/actuator'
2020.12.21 22:03:25.906 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting ProtocolHandler ["http-nio-7004"]
2020.12.21 22:03:25.943 CST   >> INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer 204 start - Tomcat started on port(s): 7004 (http) with context path ''
2020.12.21 22:03:25.967 CST   >> INFO  org.springframework.cloud.consul.serviceregistry.ConsulServiceRegistry 65 register - Registering service with consul: NewService{id='merchant-service-192-168-2-105-7004', name='merchant-service', tags=[urlprefix-/merchant-service, secure=false], address='192.168.2.105', meta=null, port=7004, enableTagOverride=null, check=Check{script='null', interval='1s', ttl='null', http='http://192.168.2.105:7004/health', method='null', header={}, tcp='null', timeout='null', deregisterCriticalServiceAfter='null', tlsSkipVerify=null, status='null'}, checks=null}
2020.12.21 22:03:26.077 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020.12.21 22:03:26.077 CST   >> INFO  org.springframework.web.servlet.FrameworkServlet 525 initServletBean - Initializing Servlet 'dispatcherServlet'
2020.12.21 22:03:26.089 CST   >> INFO  org.springframework.web.servlet.FrameworkServlet 547 initServletBean - Completed initialization in 12 ms
2020.12.21 22:03:26.610 CST   >> INFO  org.springframework.boot.StartupInfoLogger 61 logStarted - Started MerchantServiceRunner in 8.543 seconds (JVM running for 10.677)
2020.12.21 22:20:49.065 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 208 shutdown - Shutting down ExecutorService 'catalogWatchTaskScheduler'
2020.12.21 22:20:49.066 CST   >> INFO  org.springframework.cloud.consul.serviceregistry.ConsulServiceRegistry 93 deregister - Deregistering service with consul: merchant-service-192-168-2-105-7004
2020.12.21 22:20:49.158 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 208 shutdown - Shutting down ExecutorService 'applicationTaskExecutor'
rtySourceBootstrapConfiguration 102 initialize - Located property source: CompositePropertySource {name='consul', propertySources=[ConsulPropertySource {name='config/rental-service/'}, ConsulPropertySource {name='config/application/'}]}
2020.12.21 22:04:06.197 CST   >> INFO  org.springframework.boot.SpringApplication 651 logStartupProfileInfo - No active profile set, falling back to default profiles: default
2020.12.21 22:04:07.191 CST   >> WARN  org.springframework.boot.actuate.endpoint.EndpointId 155 logWarning - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020.12.21 22:04:07.368 CST   >> INFO  org.springframework.cloud.context.scope.GenericScope 295 setSerializationId - BeanFactory id=2a02194e-3b53-31eb-ac64-1cd209cec82a
2020.12.21 22:04:07.505 CST   >> INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker 330 postProcessAfterInitialization - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020.12.21 22:04:07.890 CST   >> INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer 92 initialize - Tomcat initialized with port(s): 7005 (http)
2020.12.21 22:04:07.913 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing ProtocolHandler ["http-nio-7005"]
2020.12.21 22:04:07.914 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting service [Tomcat]
2020.12.21 22:04:07.914 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting Servlet engine: [Apache Tomcat/9.0.29]
2020.12.21 22:04:08.125 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing Spring embedded WebApplicationContext
2020.12.21 22:04:08.125 CST   >> INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext 284 prepareWebApplicationContext - Root WebApplicationContext: initialization completed in 1913 ms
2020.12.21 22:04:08.243 CST   >> WARN  com.netflix.config.sources.URLConfigurationSource 121 <init> - No URLs will be polled as dynamic configuration sources.
2020.12.21 22:04:08.244 CST   >> INFO  com.netflix.config.sources.URLConfigurationSource 122 <init> - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020.12.21 22:04:08.276 CST   >> INFO  com.netflix.config.DynamicPropertyFactory 281 getInstance - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@4d1c7b
2020.12.21 22:04:09.033 CST   >> WARN  com.netflix.config.sources.URLConfigurationSource 121 <init> - No URLs will be polled as dynamic configuration sources.
2020.12.21 22:04:09.033 CST   >> INFO  com.netflix.config.sources.URLConfigurationSource 122 <init> - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020.12.21 22:04:09.251 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 171 initialize - Initializing ExecutorService 'applicationTaskExecutor'
2020.12.21 22:04:10.603 CST   >> WARN  org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger 106 logWarning - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020.12.21 22:04:10.630 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 171 initialize - Initializing ExecutorService 'catalogWatchTaskScheduler'
2020.12.21 22:04:10.643 CST   >> WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger 81 logWarning - Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020.12.21 22:04:10.689 CST   >> INFO  org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver 58 <init> - Exposing 2 endpoint(s) beneath base path '/actuator'
2020.12.21 22:04:10.941 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting ProtocolHandler ["http-nio-7005"]
2020.12.21 22:04:10.995 CST   >> INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer 204 start - Tomcat started on port(s): 7005 (http) with context path ''
2020.12.21 22:04:11.020 CST   >> INFO  org.springframework.cloud.consul.serviceregistry.ConsulServiceRegistry 65 register - Registering service with consul: NewService{id='rental-service-192-168-2-105-7005', name='rental-service', tags=[urlprefix-/rental-service, secure=false], address='192.168.2.105', meta=null, port=7005, enableTagOverride=null, check=Check{script='null', interval='1s', ttl='null', http='http://192.168.2.105:7005/health', method='null', header={}, tcp='null', timeout='null', deregisterCriticalServiceAfter='null', tlsSkipVerify=null, status='null'}, checks=null}
2020.12.21 22:04:11.700 CST   >> INFO  org.springframework.boot.StartupInfoLogger 61 logStarted - Started RentalServiceRunner in 8.589 seconds (JVM running for 10.862)
2020.12.21 22:04:12.039 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020.12.21 22:04:12.039 CST   >> INFO  org.springframework.web.servlet.FrameworkServlet 525 initServletBean - Initializing Servlet 'dispatcherServlet'
2020.12.21 22:04:12.070 CST   >> INFO  org.springframework.web.servlet.FrameworkServlet 547 initServletBean - Completed initialization in 31 ms
2020.12.21 22:20:49.266 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 208 shutdown - Shutting down ExecutorService 'catalogWatchTaskScheduler'
2020.12.21 22:20:49.267 CST   >> INFO  org.springframework.cloud.consul.serviceregistry.ConsulServiceRegistry 93 deregister - Deregistering service with consul: rental-service-192-168-2-105-7005
2020.12.21 22:20:49.310 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 208 shutdown - Shutting down ExecutorService 'applicationTaskExecutor'
pertySourceBootstrapConfiguration 102 initialize - Located property source: CompositePropertySource {name='consul', propertySources=[ConsulPropertySource {name='config/finance-service/'}, ConsulPropertySource {name='config/application/'}]}
2020.12.21 22:09:52.581 CST   >> INFO  org.springframework.boot.SpringApplication 651 logStartupProfileInfo - No active profile set, falling back to default profiles: default
2020.12.21 22:09:53.662 CST   >> WARN  org.springframework.boot.actuate.endpoint.EndpointId 155 logWarning - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020.12.21 22:09:53.878 CST   >> INFO  org.springframework.cloud.context.scope.GenericScope 295 setSerializationId - BeanFactory id=711fea6c-3dcc-390f-b607-747bacdd0dc3
2020.12.21 22:09:54.050 CST   >> INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker 330 postProcessAfterInitialization - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020.12.21 22:09:54.365 CST   >> INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer 92 initialize - Tomcat initialized with port(s): 7003 (http)
2020.12.21 22:09:54.405 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing ProtocolHandler ["http-nio-7003"]
2020.12.21 22:09:54.407 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting service [Tomcat]
2020.12.21 22:09:54.407 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting Servlet engine: [Apache Tomcat/9.0.29]
2020.12.21 22:09:54.701 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing Spring embedded WebApplicationContext
2020.12.21 22:09:54.702 CST   >> INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext 284 prepareWebApplicationContext - Root WebApplicationContext: initialization completed in 2102 ms
2020.12.21 22:09:54.811 CST   >> WARN  com.netflix.config.sources.URLConfigurationSource 121 <init> - No URLs will be polled as dynamic configuration sources.
2020.12.21 22:09:54.812 CST   >> INFO  com.netflix.config.sources.URLConfigurationSource 122 <init> - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020.12.21 22:09:54.829 CST   >> INFO  com.netflix.config.DynamicPropertyFactory 281 getInstance - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@1f77dfa
2020.12.21 22:09:55.816 CST   >> WARN  com.netflix.config.sources.URLConfigurationSource 121 <init> - No URLs will be polled as dynamic configuration sources.
2020.12.21 22:09:55.816 CST   >> INFO  com.netflix.config.sources.URLConfigurationSource 122 <init> - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020.12.21 22:09:55.996 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 171 initialize - Initializing ExecutorService 'applicationTaskExecutor'
2020.12.21 22:09:57.303 CST   >> WARN  org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger 106 logWarning - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020.12.21 22:09:57.328 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 171 initialize - Initializing ExecutorService 'catalogWatchTaskScheduler'
2020.12.21 22:09:57.340 CST   >> WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger 81 logWarning - Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020.12.21 22:09:57.365 CST   >> INFO  org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver 58 <init> - Exposing 2 endpoint(s) beneath base path '/actuator'
2020.12.21 22:09:57.525 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting ProtocolHandler ["http-nio-7003"]
2020.12.21 22:09:57.590 CST   >> INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer 204 start - Tomcat started on port(s): 7003 (http) with context path ''
2020.12.21 22:09:57.613 CST   >> INFO  org.springframework.cloud.consul.serviceregistry.ConsulServiceRegistry 65 register - Registering service with consul: NewService{id='finance-service-192-168-2-105-7003', name='finance-service', tags=[urlprefix-/finance-service, secure=false], address='192.168.2.105', meta=null, port=7003, enableTagOverride=null, check=Check{script='null', interval='1s', ttl='null', http='http://192.168.2.105:7003/health', method='null', header={}, tcp='null', timeout='null', deregisterCriticalServiceAfter='null', tlsSkipVerify=null, status='null'}, checks=null}
2020.12.21 22:09:58.216 CST   >> INFO  org.springframework.boot.StartupInfoLogger 61 logStarted - Started FinanceServiceRunner in 9.134 seconds (JVM running for 11.528)
2020.12.21 22:09:58.648 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020.12.21 22:09:58.648 CST   >> INFO  org.springframework.web.servlet.FrameworkServlet 525 initServletBean - Initializing Servlet 'dispatcherServlet'
2020.12.21 22:09:58.657 CST   >> INFO  org.springframework.web.servlet.FrameworkServlet 547 initServletBean - Completed initialization in 9 ms
2020.12.21 22:20:49.414 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 208 shutdown - Shutting down ExecutorService 'catalogWatchTaskScheduler'
2020.12.21 22:20:49.415 CST   >> INFO  org.springframework.cloud.consul.serviceregistry.ConsulServiceRegistry 93 deregister - Deregistering service with consul: finance-service-192-168-2-105-7003
2020.12.21 22:20:49.426 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 208 shutdown - Shutting down ExecutorService 'applicationTaskExecutor'
ertySourceBootstrapConfiguration 102 initialize - Located property source: CompositePropertySource {name='consul', propertySources=[ConsulPropertySource {name='config/building-service/'}, ConsulPropertySource {name='config/application/'}]}
2020.12.21 22:14:31.588 CST   >> INFO  org.springframework.boot.SpringApplication 651 logStartupProfileInfo - No active profile set, falling back to default profiles: default
2020.12.21 22:14:32.534 CST   >> WARN  org.springframework.boot.actuate.endpoint.EndpointId 155 logWarning - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020.12.21 22:14:32.699 CST   >> INFO  org.springframework.cloud.context.scope.GenericScope 295 setSerializationId - BeanFactory id=816f6dd2-aa1e-329b-b142-a1c74f9544e9
2020.12.21 22:14:32.827 CST   >> INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker 330 postProcessAfterInitialization - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020.12.21 22:14:33.148 CST   >> INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer 92 initialize - Tomcat initialized with port(s): 7006 (http)
2020.12.21 22:14:33.168 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing ProtocolHandler ["http-nio-7006"]
2020.12.21 22:14:33.168 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting service [Tomcat]
2020.12.21 22:14:33.169 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting Servlet engine: [Apache Tomcat/9.0.29]
2020.12.21 22:14:33.349 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing Spring embedded WebApplicationContext
2020.12.21 22:14:33.349 CST   >> INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext 284 prepareWebApplicationContext - Root WebApplicationContext: initialization completed in 1746 ms
2020.12.21 22:14:33.454 CST   >> WARN  com.netflix.config.sources.URLConfigurationSource 121 <init> - No URLs will be polled as dynamic configuration sources.
2020.12.21 22:14:33.454 CST   >> INFO  com.netflix.config.sources.URLConfigurationSource 122 <init> - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020.12.21 22:14:33.471 CST   >> INFO  com.netflix.config.DynamicPropertyFactory 281 getInstance - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@606204
2020.12.21 22:14:34.296 CST   >> WARN  com.netflix.config.sources.URLConfigurationSource 121 <init> - No URLs will be polled as dynamic configuration sources.
2020.12.21 22:14:34.297 CST   >> INFO  com.netflix.config.sources.URLConfigurationSource 122 <init> - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020.12.21 22:14:34.458 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 171 initialize - Initializing ExecutorService 'applicationTaskExecutor'
2020.12.21 22:14:35.732 CST   >> WARN  org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger 106 logWarning - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020.12.21 22:14:35.757 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 171 initialize - Initializing ExecutorService 'catalogWatchTaskScheduler'
2020.12.21 22:14:35.770 CST   >> WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger 81 logWarning - Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020.12.21 22:14:35.811 CST   >> INFO  org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver 58 <init> - Exposing 2 endpoint(s) beneath base path '/actuator'
2020.12.21 22:14:35.955 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting ProtocolHandler ["http-nio-7006"]
2020.12.21 22:14:35.994 CST   >> INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer 204 start - Tomcat started on port(s): 7006 (http) with context path ''
2020.12.21 22:14:36.017 CST   >> INFO  org.springframework.cloud.consul.serviceregistry.ConsulServiceRegistry 65 register - Registering service with consul: NewService{id='building-service-192-168-2-105-7006', name='building-service', tags=[urlprefix-/building-service, secure=false], address='192.168.2.105', meta=null, port=7006, enableTagOverride=null, check=Check{script='null', interval='1s', ttl='null', http='http://192.168.2.105:7006/health', method='null', header={}, tcp='null', timeout='null', deregisterCriticalServiceAfter='null', tlsSkipVerify=null, status='null'}, checks=null}
2020.12.21 22:14:36.173 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020.12.21 22:14:36.173 CST   >> INFO  org.springframework.web.servlet.FrameworkServlet 525 initServletBean - Initializing Servlet 'dispatcherServlet'
2020.12.21 22:14:36.180 CST   >> INFO  org.springframework.web.servlet.FrameworkServlet 547 initServletBean - Completed initialization in 7 ms
2020.12.21 22:14:36.581 CST   >> INFO  org.springframework.boot.StartupInfoLogger 61 logStarted - Started BuildingServiceRunner in 7.878 seconds (JVM running for 10.481)
2020.12.21 22:41:46.089 CST   >> INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker 330 postProcessAfterInitialization - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020.12.21 22:41:47.399 CST   >> INFO  org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration 102 initialize - Located property source: CompositePropertySource {name='consul', propertySources=[ConsulPropertySource {name='config/backoffice-service/'}, ConsulPropertySource {name='config/application/'}]}
2020.12.21 22:41:47.471 CST   >> INFO  org.springframework.boot.SpringApplication 651 logStartupProfileInfo - No active profile set, falling back to default profiles: default
2020.12.21 22:41:48.584 CST   >> WARN  org.springframework.boot.actuate.endpoint.EndpointId 155 logWarning - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020.12.21 22:41:48.782 CST   >> INFO  org.springframework.cloud.context.scope.GenericScope 295 setSerializationId - BeanFactory id=08927f01-c1d1-3322-8ab7-dc48ab2b68ee
2020.12.21 22:41:48.926 CST   >> INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker 330 postProcessAfterInitialization - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020.12.21 22:41:49.185 CST   >> INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer 92 initialize - Tomcat initialized with port(s): 7001 (http)
2020.12.21 22:41:49.219 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing ProtocolHandler ["http-nio-7001"]
2020.12.21 22:41:49.220 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting service [Tomcat]
2020.12.21 22:41:49.221 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting Servlet engine: [Apache Tomcat/9.0.29]
2020.12.21 22:41:49.402 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing Spring embedded WebApplicationContext
2020.12.21 22:41:49.402 CST   >> INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext 284 prepareWebApplicationContext - Root WebApplicationContext: initialization completed in 1912 ms
2020.12.21 22:41:49.537 CST   >> WARN  com.netflix.config.sources.URLConfigurationSource 121 <init> - No URLs will be polled as dynamic configuration sources.
2020.12.21 22:41:49.538 CST   >> INFO  com.netflix.config.sources.URLConfigurationSource 122 <init> - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020.12.21 22:41:49.556 CST   >> INFO  com.netflix.config.DynamicPropertyFactory 281 getInstance - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@d5e37c
2020.12.21 22:41:50.374 CST   >> WARN  com.netflix.config.sources.URLConfigurationSource 121 <init> - No URLs will be polled as dynamic configuration sources.
2020.12.21 22:41:50.374 CST   >> INFO  com.netflix.config.sources.URLConfigurationSource 122 <init> - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020.12.21 22:41:50.552 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 171 initialize - Initializing ExecutorService 'applicationTaskExecutor'
2020.12.21 22:41:51.847 CST   >> WARN  org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger 106 logWarning - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020.12.21 22:41:51.893 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 171 initialize - Initializing ExecutorService 'catalogWatchTaskScheduler'
2020.12.21 22:41:51.908 CST   >> WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger 81 logWarning - Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020.12.21 22:41:51.938 CST   >> INFO  org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver 58 <init> - Exposing 2 endpoint(s) beneath base path '/actuator'
2020.12.21 22:41:52.095 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting ProtocolHandler ["http-nio-7001"]
2020.12.21 22:41:52.133 CST   >> INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer 204 start - Tomcat started on port(s): 7001 (http) with context path ''
2020.12.21 22:41:52.152 CST   >> INFO  org.springframework.cloud.consul.serviceregistry.ConsulServiceRegistry 65 register - Registering service with consul: NewService{id='backoffice-service-192-168-2-105-7001', name='backoffice-service', tags=[urlprefix-/backoffice-service, secure=false], address='192.168.2.105', meta=null, port=7001, enableTagOverride=null, check=Check{script='null', interval='1s', ttl='null', http='http://192.168.2.105:7001/health', method='null', header={}, tcp='null', timeout='null', deregisterCriticalServiceAfter='null', tlsSkipVerify=null, status='null'}, checks=null}
2020.12.21 22:41:52.625 CST   >> INFO  org.springframework.boot.StartupInfoLogger 61 logStarted - Started BackofficeServiceRunner in 8.443 seconds (JVM running for 10.67)
2020.12.21 22:41:53.212 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020.12.21 22:41:53.212 CST   >> INFO  org.springframework.web.servlet.FrameworkServlet 525 initServletBean - Initializing Servlet 'dispatcherServlet'
2020.12.21 22:41:53.221 CST   >> INFO  org.springframework.web.servlet.FrameworkServlet 547 initServletBean - Completed initialization in 8 ms
2020.12.21 22:42:40.126 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 208 shutdown - Shutting down ExecutorService 'catalogWatchTaskScheduler'
2020.12.21 22:42:40.126 CST   >> INFO  org.springframework.cloud.consul.serviceregistry.ConsulServiceRegistry 93 deregister - Deregistering service with consul: backoffice-service-192-168-2-105-7001
2020.12.21 22:42:40.138 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 208 shutdown - Shutting down ExecutorService 'applicationTaskExecutor'
2020.12.21 22:42:49.311 CST   >> INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker 330 postProcessAfterInitialization - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020.12.21 22:42:50.581 CST   >> INFO  org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration 102 initialize - Located property source: CompositePropertySource {name='consul', propertySources=[ConsulPropertySource {name='config/backoffice-service/'}, ConsulPropertySource {name='config/application/'}]}
2020.12.21 22:42:50.649 CST   >> INFO  org.springframework.boot.SpringApplication 651 logStartupProfileInfo - No active profile set, falling back to default profiles: default
2020.12.21 22:42:51.634 CST   >> WARN  org.springframework.boot.actuate.endpoint.EndpointId 155 logWarning - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020.12.21 22:42:51.836 CST   >> INFO  org.springframework.cloud.context.scope.GenericScope 295 setSerializationId - BeanFactory id=08927f01-c1d1-3322-8ab7-dc48ab2b68ee
2020.12.21 22:42:51.991 CST   >> INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker 330 postProcessAfterInitialization - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020.12.21 22:42:52.268 CST   >> INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer 92 initialize - Tomcat initialized with port(s): 7001 (http)
2020.12.21 22:42:52.309 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing ProtocolHandler ["http-nio-7001"]
2020.12.21 22:42:52.310 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting service [Tomcat]
2020.12.21 22:42:52.310 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting Servlet engine: [Apache Tomcat/9.0.29]
2020.12.21 22:42:52.493 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing Spring embedded WebApplicationContext
2020.12.21 22:42:52.493 CST   >> INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext 284 prepareWebApplicationContext - Root WebApplicationContext: initialization completed in 1826 ms
2020.12.21 22:42:52.618 CST   >> WARN  com.netflix.config.sources.URLConfigurationSource 121 <init> - No URLs will be polled as dynamic configuration sources.
2020.12.21 22:42:52.619 CST   >> INFO  com.netflix.config.sources.URLConfigurationSource 122 <init> - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020.12.21 22:42:52.636 CST   >> INFO  com.netflix.config.DynamicPropertyFactory 281 getInstance - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@1de6f05
2020.12.21 22:42:53.512 CST   >> WARN  com.netflix.config.sources.URLConfigurationSource 121 <init> - No URLs will be polled as dynamic configuration sources.
2020.12.21 22:42:53.512 CST   >> INFO  com.netflix.config.sources.URLConfigurationSource 122 <init> - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020.12.21 22:42:53.721 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 171 initialize - Initializing ExecutorService 'applicationTaskExecutor'
2020.12.21 22:42:55.109 CST   >> WARN  org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger 106 logWarning - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020.12.21 22:42:55.154 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 171 initialize - Initializing ExecutorService 'catalogWatchTaskScheduler'
2020.12.21 22:42:55.168 CST   >> WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger 81 logWarning - Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020.12.21 22:42:55.196 CST   >> INFO  org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver 58 <init> - Exposing 2 endpoint(s) beneath base path '/actuator'
2020.12.21 22:42:55.378 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting ProtocolHandler ["http-nio-7001"]
2020.12.21 22:42:55.418 CST   >> INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer 204 start - Tomcat started on port(s): 7001 (http) with context path ''
2020.12.21 22:42:55.439 CST   >> INFO  org.springframework.cloud.consul.serviceregistry.ConsulServiceRegistry 65 register - Registering service with consul: NewService{id='backoffice-service-192-168-0-103-7001', name='backoffice-service', tags=[urlprefix-/backoffice-service, secure=false], address='192.168.0.103', meta=null, port=7001, enableTagOverride=null, check=Check{script='null', interval='1s', ttl='null', http='http://192.168.0.103:7001/health', method='null', header={}, tcp='null', timeout='null', deregisterCriticalServiceAfter='null', tlsSkipVerify=null, status='null'}, checks=null}
2020.12.21 22:42:55.973 CST   >> INFO  org.springframework.boot.StartupInfoLogger 61 logStarted - Started BackofficeServiceRunner in 8.465 seconds (JVM running for 10.561)
2020.12.21 22:42:56.242 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020.12.21 22:42:56.242 CST   >> INFO  org.springframework.web.servlet.FrameworkServlet 525 initServletBean - Initializing Servlet 'dispatcherServlet'
2020.12.21 22:42:56.252 CST   >> INFO  org.springframework.web.servlet.FrameworkServlet 547 initServletBean - Completed initialization in 10 ms
2020.12.21 22:46:21.532 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 208 shutdown - Shutting down ExecutorService 'catalogWatchTaskScheduler'
2020.12.21 22:46:21.533 CST   >> INFO  org.springframework.cloud.consul.serviceregistry.ConsulServiceRegistry 93 deregister - Deregistering service with consul: backoffice-service-192-168-0-103-7001
2020.12.21 22:46:21.576 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 208 shutdown - Shutting down ExecutorService 'applicationTaskExecutor'
2020.12.21 23:02:37.613 CST   >> INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker 330 postProcessAfterInitialization - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020.12.21 23:02:39.215 CST   >> INFO  org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration 102 initialize - Located property source: CompositePropertySource {name='consul', propertySources=[ConsulPropertySource {name='config/backoffice-service/'}, ConsulPropertySource {name='config/application/'}]}
2020.12.21 23:02:39.286 CST   >> INFO  org.springframework.boot.SpringApplication 651 logStartupProfileInfo - No active profile set, falling back to default profiles: default
2020.12.21 23:02:40.335 CST   >> WARN  org.springframework.boot.actuate.endpoint.EndpointId 155 logWarning - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020.12.21 23:02:40.526 CST   >> INFO  org.springframework.cloud.context.scope.GenericScope 295 setSerializationId - BeanFactory id=4bcbd620-583c-3071-897a-0fdfd5a4259e
2020.12.21 23:02:40.880 CST   >> INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker 330 postProcessAfterInitialization - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020.12.21 23:02:41.200 CST   >> INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer 92 initialize - Tomcat initialized with port(s): 7001 (http)
2020.12.21 23:02:41.222 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing ProtocolHandler ["http-nio-7001"]
2020.12.21 23:02:41.224 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting service [Tomcat]
2020.12.21 23:02:41.225 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting Servlet engine: [Apache Tomcat/9.0.29]
2020.12.21 23:02:41.434 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing Spring embedded WebApplicationContext
2020.12.21 23:02:41.434 CST   >> INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext 284 prepareWebApplicationContext - Root WebApplicationContext: initialization completed in 2130 ms
2020.12.21 23:02:41.584 CST   >> WARN  com.netflix.config.sources.URLConfigurationSource 121 <init> - No URLs will be polled as dynamic configuration sources.
2020.12.21 23:02:41.585 CST   >> INFO  com.netflix.config.sources.URLConfigurationSource 122 <init> - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020.12.21 23:02:41.616 CST   >> INFO  com.netflix.config.DynamicPropertyFactory 281 getInstance - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@18ac8d5
2020.12.21 23:02:42.564 CST   >> WARN  com.netflix.config.sources.URLConfigurationSource 121 <init> - No URLs will be polled as dynamic configuration sources.
2020.12.21 23:02:42.564 CST   >> INFO  com.netflix.config.sources.URLConfigurationSource 122 <init> - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020.12.21 23:02:42.948 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 171 initialize - Initializing ExecutorService 'applicationTaskExecutor'
2020.12.21 23:02:44.442 CST   >> WARN  org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger 106 logWarning - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020.12.21 23:02:44.480 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 171 initialize - Initializing ExecutorService 'catalogWatchTaskScheduler'
2020.12.21 23:02:44.497 CST   >> WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger 81 logWarning - Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020.12.21 23:02:44.527 CST   >> INFO  org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver 58 <init> - Exposing 2 endpoint(s) beneath base path '/actuator'
2020.12.21 23:02:44.743 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting ProtocolHandler ["http-nio-7001"]
2020.12.21 23:02:44.779 CST   >> INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer 204 start - Tomcat started on port(s): 7001 (http) with context path ''
2020.12.21 23:02:44.801 CST   >> INFO  org.springframework.cloud.consul.serviceregistry.ConsulServiceRegistry 65 register - Registering service with consul: NewService{id='backoffice-service-192-168-0-103-7001', name='backoffice-service', tags=[urlprefix-/backoffice-service, secure=false], address='192.168.0.103', meta=null, port=7001, enableTagOverride=null, check=Check{script='null', interval='1s', ttl='null', http='http://192.168.0.103:7001/health', method='null', header={}, tcp='null', timeout='null', deregisterCriticalServiceAfter='null', tlsSkipVerify=null, status='null'}, checks=null}
2020.12.21 23:02:45.358 CST   >> INFO  org.springframework.boot.StartupInfoLogger 61 logStarted - Started BackofficeServiceRunner in 9.712 seconds (JVM running for 12.508)
2020.12.21 23:02:45.578 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020.12.21 23:02:45.578 CST   >> INFO  org.springframework.web.servlet.FrameworkServlet 525 initServletBean - Initializing Servlet 'dispatcherServlet'
2020.12.21 23:02:45.602 CST   >> INFO  org.springframework.web.servlet.FrameworkServlet 547 initServletBean - Completed initialization in 24 ms
2020.12.21 23:03:00.044 CST   >> INFO  com.bluetop.framework.core.log.Log 55 execute - 请求 URL: http://127.0.0.1:7001/say
2020.12.21 23:03:00.044 CST   >> INFO  com.bluetop.framework.core.log.Log 56 execute - 请求方法 HTTP_METHOD: POST 
2020.12.21 23:03:00.045 CST   >> INFO  com.bluetop.framework.core.log.Log 57 execute - 请求 IP: 127.0.0.1
2020.12.21 23:03:00.048 CST   >> INFO  com.bluetop.framework.core.log.Log 58 execute - 请求类 CLASS_METHOD: com.bluetop.backoffice.provider.controller.DemoController.sayHello
2020.12.21 23:03:00.048 CST   >> INFO  com.bluetop.framework.core.log.Log 59 execute - 请求参数 ARGS: [jh]
2020.12.21 23:03:40.562 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 208 shutdown - Shutting down ExecutorService 'catalogWatchTaskScheduler'
2020.12.21 23:03:40.562 CST   >> INFO  org.springframework.cloud.consul.serviceregistry.ConsulServiceRegistry 93 deregister - Deregistering service with consul: backoffice-service-192-168-0-103-7001
2020.12.21 23:03:40.573 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 208 shutdown - Shutting down ExecutorService 'applicationTaskExecutor'
2020.12.21 23:03:51.832 CST   >> INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker 330 postProcessAfterInitialization - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020.12.21 23:03:53.102 CST   >> INFO  org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration 102 initialize - Located property source: CompositePropertySource {name='consul', propertySources=[ConsulPropertySource {name='config/backoffice-service/'}, ConsulPropertySource {name='config/application/'}]}
2020.12.21 23:03:53.206 CST   >> INFO  org.springframework.boot.SpringApplication 651 logStartupProfileInfo - No active profile set, falling back to default profiles: default
2020.12.21 23:03:54.184 CST   >> WARN  org.springframework.boot.actuate.endpoint.EndpointId 155 logWarning - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020.12.21 23:03:54.366 CST   >> INFO  org.springframework.cloud.context.scope.GenericScope 295 setSerializationId - BeanFactory id=4bcbd620-583c-3071-897a-0fdfd5a4259e
2020.12.21 23:03:54.727 CST   >> INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker 330 postProcessAfterInitialization - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020.12.21 23:03:55.131 CST   >> INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer 92 initialize - Tomcat initialized with port(s): 7001 (http)
2020.12.21 23:03:55.153 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing ProtocolHandler ["http-nio-7001"]
2020.12.21 23:03:55.154 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting service [Tomcat]
2020.12.21 23:03:55.155 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting Servlet engine: [Apache Tomcat/9.0.29]
2020.12.21 23:03:55.369 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing Spring embedded WebApplicationContext
2020.12.21 23:03:55.369 CST   >> INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext 284 prepareWebApplicationContext - Root WebApplicationContext: initialization completed in 2141 ms
2020.12.21 23:03:55.490 CST   >> WARN  com.netflix.config.sources.URLConfigurationSource 121 <init> - No URLs will be polled as dynamic configuration sources.
2020.12.21 23:03:55.491 CST   >> INFO  com.netflix.config.sources.URLConfigurationSource 122 <init> - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020.12.21 23:03:55.517 CST   >> INFO  com.netflix.config.DynamicPropertyFactory 281 getInstance - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@13f3d00
2020.12.21 23:03:56.381 CST   >> WARN  com.netflix.config.sources.URLConfigurationSource 121 <init> - No URLs will be polled as dynamic configuration sources.
2020.12.21 23:03:56.381 CST   >> INFO  com.netflix.config.sources.URLConfigurationSource 122 <init> - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020.12.21 23:03:56.709 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 171 initialize - Initializing ExecutorService 'applicationTaskExecutor'
2020.12.21 23:03:58.211 CST   >> WARN  org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger 106 logWarning - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020.12.21 23:03:58.258 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 171 initialize - Initializing ExecutorService 'catalogWatchTaskScheduler'
2020.12.21 23:03:58.283 CST   >> WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger 81 logWarning - Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020.12.21 23:03:58.321 CST   >> INFO  org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver 58 <init> - Exposing 2 endpoint(s) beneath base path '/actuator'
2020.12.21 23:03:58.497 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Starting ProtocolHandler ["http-nio-7001"]
2020.12.21 23:03:58.532 CST   >> INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer 204 start - Tomcat started on port(s): 7001 (http) with context path ''
2020.12.21 23:03:58.554 CST   >> INFO  org.springframework.cloud.consul.serviceregistry.ConsulServiceRegistry 65 register - Registering service with consul: NewService{id='backoffice-service-192-168-0-103-7001', name='backoffice-service', tags=[urlprefix-/backoffice-service, secure=false], address='192.168.0.103', meta=null, port=7001, enableTagOverride=null, check=Check{script='null', interval='1s', ttl='null', http='http://192.168.0.103:7001/health', method='null', header={}, tcp='null', timeout='null', deregisterCriticalServiceAfter='null', tlsSkipVerify=null, status='null'}, checks=null}
2020.12.21 23:03:58.842 CST   >> INFO  org.apache.juli.logging.DirectJDKLog 173 log - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020.12.21 23:03:58.842 CST   >> INFO  org.springframework.web.servlet.FrameworkServlet 525 initServletBean - Initializing Servlet 'dispatcherServlet'
2020.12.21 23:03:58.865 CST   >> INFO  org.springframework.web.servlet.FrameworkServlet 547 initServletBean - Completed initialization in 23 ms
2020.12.21 23:03:59.403 CST   >> INFO  org.springframework.boot.StartupInfoLogger 61 logStarted - Started BackofficeServiceRunner in 9.433 seconds (JVM running for 11.511)
2020.12.21 23:04:28.577 CST   >> INFO  com.bluetop.framework.core.log.Log 55 execute - 请求 URL: http://127.0.0.1:7001/say
2020.12.21 23:04:28.577 CST   >> INFO  com.bluetop.framework.core.log.Log 56 execute - 请求方法 HTTP_METHOD: POST 
2020.12.21 23:04:28.578 CST   >> INFO  com.bluetop.framework.core.log.Log 57 execute - 请求 IP: 127.0.0.1
2020.12.21 23:04:28.580 CST   >> INFO  com.bluetop.framework.core.log.Log 58 execute - 请求类 CLASS_METHOD: com.bluetop.backoffice.provider.controller.DemoController.sayHello
2020.12.21 23:04:28.580 CST   >> INFO  com.bluetop.framework.core.log.Log 59 execute - 请求参数 ARGS: [jh]
2020.12.21 23:04:54.468 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 208 shutdown - Shutting down ExecutorService 'catalogWatchTaskScheduler'
2020.12.21 23:04:54.469 CST   >> INFO  org.springframework.cloud.consul.serviceregistry.ConsulServiceRegistry 93 deregister - Deregistering service with consul: backoffice-service-192-168-0-103-7001
2020.12.21 23:04:54.483 CST   >> INFO  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport 208 shutdown - Shutting down ExecutorService 'applicationTaskExecutor'
